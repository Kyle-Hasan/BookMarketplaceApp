{
	"info": {
		"_postman_id": "5694ba52-2e92-49cb-b04d-d6b12ec85c79",
		"name": "bookmarketplaceapp",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "author",
			"item": [
				{
					"name": "Endpoint 12",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/books/author/?BookID=5",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"books",
								"author",
								""
							],
							"query": [
								{
									"key": "BookID",
									"value": "5",
									"description": "integer"
								}
							]
						},
						"description": "#### Description\n\nGet author info for a book"
					},
					"response": [
						{
							"name": "Endpoint 12",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://127.0.0.1:8000/books/author/?BookID=3",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"books",
										"author",
										""
									],
									"query": [
										{
											"key": "BookID",
											"value": "3",
											"description": "integer"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 07:41:41 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, DELETE, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "90"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"FName\": \"Bob\",\n        \"LName\": \"Joe\",\n        \"AuthorID\": 1\n    },\n    {\n        \"FName\": \"Yor\",\n        \"LName\": \"Forger\",\n        \"AuthorID\": 4\n    }\n]"
						}
					]
				},
				{
					"name": "Endpoint 13",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "NumBooks",
									"value": "0",
									"description": "integer",
									"type": "text"
								},
								{
									"key": "FName",
									"value": "Bob",
									"description": "varchar(50)",
									"type": "text"
								},
								{
									"key": "LName",
									"value": "Joe",
									"description": "varchar(50)",
									"type": "text"
								},
								{
									"key": "AuthorID",
									"value": "1",
									"description": "integer",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/author/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"author",
								""
							]
						},
						"description": "#### Description\n\nAdd new author to the database"
					},
					"response": [
						{
							"name": "Endpoint 13",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "NumBooks",
											"value": "0",
											"description": "integer",
											"type": "text"
										},
										{
											"key": "FName",
											"value": "Bob",
											"description": "varchar(50)",
											"type": "text"
										},
										{
											"key": "LName",
											"value": "Joe",
											"description": "varchar(50)",
											"type": "text"
										},
										{
											"key": "AuthorID",
											"value": "1",
											"description": "integer",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://127.0.0.1:8000/author/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"author",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 07:42:24 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "55"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"AuthorID\": 7,\n    \"FName\": \"Bob\",\n    \"LName\": \"Joe\",\n    \"NumBooks\": 0\n}"
						}
					]
				},
				{
					"name": "Endpoint 14",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "BookID",
									"value": "8",
									"description": "integer",
									"type": "text"
								},
								{
									"key": "AuthorID",
									"value": "3",
									"description": "integer",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/writes/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"writes",
								""
							]
						},
						"description": "#### Description\n\nAssign author to a book"
					},
					"response": [
						{
							"name": "Endpoint 14",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "BookID",
											"value": "8",
											"description": "integer",
											"type": "text"
										},
										{
											"key": "AuthorID",
											"value": "2",
											"description": "integer",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://127.0.0.1:8000/writes/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"writes",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 07:44:15 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, DELETE, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "25"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "\"Author assigned to book\""
						}
					]
				},
				{
					"name": "Endpoint 15",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/writes/?BookID=5&AuthorID=1",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"writes",
								""
							],
							"query": [
								{
									"key": "BookID",
									"value": "5",
									"description": "integer"
								},
								{
									"key": "AuthorID",
									"value": "1",
									"description": "integer"
								}
							]
						},
						"description": "#### Description\n\nDeletes an author from a book"
					},
					"response": [
						{
							"name": "Endpoint 15",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://127.0.0.1:8000/writes/?BookID=5&AuthorID=1",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"writes",
										""
									],
									"query": [
										{
											"key": "BookID",
											"value": "5",
											"description": "integer"
										},
										{
											"key": "AuthorID",
											"value": "1",
											"description": "integer"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 08:51:54 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, DELETE, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "9"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "\"deleted\""
						}
					]
				},
				{
					"name": "Endpoint 33",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/books/author/?AuthorID=1",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"books",
								"author",
								""
							],
							"query": [
								{
									"key": "AuthorID",
									"value": "1",
									"description": "integer"
								}
							]
						},
						"description": "#### Description\n\nGets all books for an author"
					},
					"response": [
						{
							"name": "Endpoint 33",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://127.0.0.1:8000/books/author/?AuthorID=1",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"books",
										"author",
										""
									],
									"query": [
										{
											"key": "AuthorID",
											"value": "1",
											"description": "integer"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 08:29:35 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, DELETE, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "173"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"BookID\": 5,\n        \"Title\": \"a\",\n        \"Rating\": 1,\n        \"Image\": \"https://pa1.narvii.com/7329/061b825b65222f25684b74768ac7892c9547311ar1-676-769_hq.gif\",\n        \"SalePrice\": 12,\n        \"RentPrice\": 12,\n        \"Stock\": 5\n    }\n]"
						}
					]
				},
				{
					"name": "Endpoint 38",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/author/?Name=Bob",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"author",
								""
							],
							"query": [
								{
									"key": "Name",
									"value": "Bob",
									"description": "varchar (50)"
								}
							]
						},
						"description": "#### Description\n\nUsed to get all authors with a certain name. Name can be first name or last name."
					},
					"response": [
						{
							"name": "Endpoint 38",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://127.0.0.1:8000/author/?Name=Bob",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"author",
										""
									],
									"query": [
										{
											"key": "Name",
											"value": "Bob",
											"description": "varchar (50)"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 08:43:37 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "171"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"AuthorID\": 1,\n        \"FName\": \"Bob\",\n        \"LName\": \"Joe\",\n        \"NumBooks\": 0\n    },\n    {\n        \"AuthorID\": 2,\n        \"FName\": \"Bob\",\n        \"LName\": \"Steve\",\n        \"NumBooks\": 0\n    },\n    {\n        \"AuthorID\": 7,\n        \"FName\": \"Bob\",\n        \"LName\": \"Joe\",\n        \"NumBooks\": 0\n    }\n]"
						}
					]
				},
				{
					"name": "Endpoint 39",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/author/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"author",
								""
							]
						},
						"description": "#### Description\n\nUsed to get all authors"
					},
					"response": [
						{
							"name": "Endpoint 39",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://127.0.0.1:8000/author/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"author",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 08:44:56 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "418"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"AuthorID\": 1,\n        \"FName\": \"Bob\",\n        \"LName\": \"Joe\",\n        \"NumBooks\": 0\n    },\n    {\n        \"AuthorID\": 2,\n        \"FName\": \"Bob\",\n        \"LName\": \"Steve\",\n        \"NumBooks\": 0\n    },\n    {\n        \"AuthorID\": 3,\n        \"FName\": \"w35\",\n        \"LName\": \"wetwet\",\n        \"NumBooks\": 0\n    },\n    {\n        \"AuthorID\": 4,\n        \"FName\": \"Yor\",\n        \"LName\": \"Forger\",\n        \"NumBooks\": 123\n    },\n    {\n        \"AuthorID\": 5,\n        \"FName\": \"Forger\",\n        \"LName\": \"Yor\",\n        \"NumBooks\": 123\n    },\n    {\n        \"AuthorID\": 6,\n        \"FName\": \"Forger Yor\",\n        \"LName\": \"None\",\n        \"NumBooks\": 123\n    },\n    {\n        \"AuthorID\": 7,\n        \"FName\": \"Bob\",\n        \"LName\": \"Joe\",\n        \"NumBooks\": 0\n    }\n]"
						}
					]
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "Endpoint 1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "Email",
									"value": "a@gmail.com",
									"description": "varchar (50)",
									"type": "text"
								},
								{
									"key": "Password",
									"value": "a",
									"description": "varchar (50)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/login/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"login",
								""
							]
						},
						"description": "#### Description\n\nUser/Admin logging in"
					},
					"response": [
						{
							"name": "Endpoint 1",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Email",
											"value": "b@gmail.com",
											"type": "text"
										},
										{
											"key": "Password",
											"value": "a",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://127.0.0.1:8000/login/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"login",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 11 Apr 2022 04:57:14 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "5"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "false"
						}
					]
				},
				{
					"name": "Endpoint 2",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "Email",
									"value": "b@gmail.com",
									"description": "varchar (50)",
									"type": "text"
								},
								{
									"key": "Password",
									"value": "a",
									"description": "varchar (50)",
									"type": "text"
								},
								{
									"key": "FName",
									"value": "Bill",
									"description": "varchar (5)",
									"type": "text"
								},
								{
									"key": "LName",
									"value": "Gates",
									"description": "varchar (5)",
									"type": "text"
								},
								{
									"key": "AdminFlag",
									"value": "False",
									"description": "bool",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/signup/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"signup",
								""
							]
						},
						"description": "#### Description\n\nInput User/Admin Information"
					},
					"response": [
						{
							"name": "Endpoint 1",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Email",
											"value": "b@gmail.com",
											"type": "text"
										},
										{
											"key": "Password",
											"value": "a",
											"type": "text"
										},
										{
											"key": "FName",
											"value": "Bill",
											"type": "text"
										},
										{
											"key": "LName",
											"value": "Gates",
											"type": "text"
										},
										{
											"key": "AdminFlag",
											"value": "False",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://127.0.0.1:8000/signup/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"signup",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 11 Apr 2022 04:52:33 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "POST, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "7"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "\"False\""
						}
					]
				},
				{
					"name": "Endpoint 3",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/user/?User_Email=a@gmail.com",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"user",
								""
							],
							"query": [
								{
									"key": "User_Email",
									"value": "a@gmail.com",
									"description": "varchar (50)"
								}
							]
						},
						"description": "#### Description\n\nGet User/Admin Information"
					},
					"response": [
						{
							"name": "Endpoint 3",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://127.0.0.1:8000/user/?User_Email=a@gmail.com",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"user",
										""
									],
									"query": [
										{
											"key": "User_Email",
											"value": "a@gmail.com",
											"description": "varchar (50)"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 07:26:03 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, PATCH, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "103"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"Email\": \"a@gmail.com\",\n    \"Address\": \"\",\n    \"DOB\": null,\n    \"FName\": \"a\",\n    \"LName\": \"a\",\n    \"AdminFlag\": false,\n    \"CardNo\": null\n}"
						}
					]
				},
				{
					"name": "Endpoint 4",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "Email\n",
									"value": "a@gmail.com",
									"description": "varchar (50)",
									"type": "text"
								},
								{
									"key": "Address",
									"value": "102",
									"description": "varchar (50)",
									"type": "text"
								},
								{
									"key": "DOB",
									"value": "2001-10-10",
									"description": "date",
									"type": "text"
								},
								{
									"key": "FName",
									"value": "Charlie",
									"description": "varchar (50)",
									"type": "text"
								},
								{
									"key": "LName",
									"value": "Sheen",
									"description": "varchar (50)",
									"type": "text"
								},
								{
									"key": "AdminFlag",
									"value": "False",
									"description": "bool",
									"type": "text"
								},
								{
									"key": "CardNo",
									"value": "23",
									"description": "integer",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/user/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"user",
								""
							]
						},
						"description": "#### Description\n\nEdit user info"
					},
					"response": [
						{
							"name": "Endpoint 4",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Email\n",
											"value": "a@gmail.com",
											"description": "varchar (50)",
											"type": "text"
										},
										{
											"key": "Address",
											"value": "102",
											"description": "varchar (50)",
											"type": "text"
										},
										{
											"key": "DOB",
											"value": "2001-10-10",
											"description": "date",
											"type": "text"
										},
										{
											"key": "FName",
											"value": "Charlie",
											"description": "varchar (50)",
											"type": "text"
										},
										{
											"key": "LName",
											"value": "Sheen",
											"description": "varchar (50)",
											"type": "text"
										},
										{
											"key": "AdminFlag",
											"value": "False",
											"description": "bool",
											"type": "text"
										},
										{
											"key": "CardNo",
											"value": "23",
											"description": "integer",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://127.0.0.1:8000/user/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"user",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 07:26:20 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, PATCH, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "124"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"Email\": \"a@gmail.com\",\n    \"Address\": \"102\",\n    \"DOB\": \"2001-10-10\",\n    \"FName\": \"Charlie\",\n    \"LName\": \"Sheen\",\n    \"AdminFlag\": false,\n    \"CardNo\": null\n}"
						}
					]
				},
				{
					"name": "Endpoint 5",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "BookID",
									"value": "3",
									"description": "integer",
									"type": "text"
								},
								{
									"key": "User_Email",
									"value": "a@gmail.com",
									"description": "varchar (50)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/wishlist/user/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"wishlist",
								"user",
								""
							]
						},
						"description": "#### Description\n\nUser adds a book to their wishlist"
					},
					"response": [
						{
							"name": "Endpoint 5",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "BookID",
											"value": "3",
											"description": "integer",
											"type": "text"
										},
										{
											"key": "User_Email",
											"value": "a@gmail.com",
											"description": "varchar (50)",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://127.0.0.1:8000/wishlist/user/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"wishlist",
										"user",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 07:33:41 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, DELETE, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "2"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "\"\""
						}
					]
				}
			]
		},
		{
			"name": "book",
			"item": [
				{
					"name": "Endpoint 6",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/book/?BookID=3",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"book",
								""
							],
							"query": [
								{
									"key": "BookID",
									"value": "3",
									"description": "integer"
								}
							]
						},
						"description": "#### Description\n\nGets 1 book in database"
					},
					"response": [
						{
							"name": "Endpoint 6",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://127.0.0.1:8000/book/?BookID=3",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"book",
										""
									],
									"query": [
										{
											"key": "BookID",
											"value": "3",
											"description": "integer"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 07:34:51 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, PATCH, DELETE, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "272"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"BookID\": 3,\n    \"ReleaseYear\": 8,\n    \"PageCount\": 1,\n    \"Description\": \"\",\n    \"RentPrice\": 4,\n    \"Title\": \"dddd\",\n    \"SalePrice\": 4,\n    \"Rating\": 0,\n    \"Stock\": 1,\n    \"Damage\": \"twttw\",\n    \"LocationID\": 1,\n    \"Image\": \"https://pa1.narvii.com/7329/061b825b65222f25684b74768ac7892c9547311ar1-676-769_hq.gif\",\n    \"Publisher_Name\": \"a\"\n}"
						}
					]
				},
				{
					"name": "Endpoint 7",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/book/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"book",
								""
							]
						},
						"description": "#### Description\n\nGets every book in database"
					},
					"response": [
						{
							"name": "Endpoint 7",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://127.0.0.1:8000/book/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"book",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 07:35:44 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, PATCH, DELETE, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "2121"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"BookID\": 3,\n        \"ReleaseYear\": 8,\n        \"PageCount\": 1,\n        \"Description\": \"\",\n        \"RentPrice\": 4,\n        \"Title\": \"dddd\",\n        \"SalePrice\": 4,\n        \"Rating\": 0,\n        \"Stock\": 1,\n        \"Damage\": \"twttw\",\n        \"LocationID\": 1,\n        \"Image\": \"https://pa1.narvii.com/7329/061b825b65222f25684b74768ac7892c9547311ar1-676-769_hq.gif\",\n        \"Publisher_Name\": \"a\"\n    },\n    {\n        \"BookID\": 4,\n        \"ReleaseYear\": 8,\n        \"PageCount\": 1,\n        \"Description\": \"\",\n        \"RentPrice\": 4,\n        \"Title\": \"dddd\",\n        \"SalePrice\": 4,\n        \"Rating\": 0,\n        \"Stock\": 0,\n        \"Damage\": \"twttw\",\n        \"LocationID\": 1,\n        \"Image\": \"https://pa1.narvii.com/7329/061b825b65222f25684b74768ac7892c9547311ar1-676-769_hq.gif\",\n        \"Publisher_Name\": \"a\"\n    },\n    {\n        \"BookID\": 5,\n        \"ReleaseYear\": 0,\n        \"PageCount\": 3,\n        \"Description\": \"\",\n        \"RentPrice\": 12,\n        \"Title\": \"a\",\n        \"SalePrice\": 12,\n        \"Rating\": 1,\n        \"Stock\": 5,\n        \"Damage\": \"qdqwd\",\n        \"LocationID\": 1,\n        \"Image\": \"https://pa1.narvii.com/7329/061b825b65222f25684b74768ac7892c9547311ar1-676-769_hq.gif\",\n        \"Publisher_Name\": \"a\"\n    },\n    {\n        \"BookID\": 6,\n        \"ReleaseYear\": 0,\n        \"PageCount\": 3,\n        \"Description\": \"\",\n        \"RentPrice\": 12,\n        \"Title\": \"a\",\n        \"SalePrice\": 12,\n        \"Rating\": 1,\n        \"Stock\": 9,\n        \"Damage\": \"qdqwd\",\n        \"LocationID\": 1,\n        \"Image\": \"https://pa1.narvii.com/7329/061b825b65222f25684b74768ac7892c9547311ar1-676-769_hq.gif\",\n        \"Publisher_Name\": \"a\"\n    },\n    {\n        \"BookID\": 7,\n        \"ReleaseYear\": 0,\n        \"PageCount\": 3,\n        \"Description\": \"\",\n        \"RentPrice\": 12,\n        \"Title\": \"a\",\n        \"SalePrice\": 12,\n        \"Rating\": 1,\n        \"Stock\": 11,\n        \"Damage\": \"qdqwd\",\n        \"LocationID\": 1,\n        \"Image\": \"https://pa1.narvii.com/7329/061b825b65222f25684b74768ac7892c9547311ar1-676-769_hq.gif\",\n        \"Publisher_Name\": \"a\"\n    },\n    {\n        \"BookID\": 8,\n        \"ReleaseYear\": 7,\n        \"PageCount\": 1,\n        \"Description\": \"efwefpjfwe efwefefpwefwef ewfpwoefjwpffjpef wfpowefwepofepofjopfe wefpowefjepgojgpweogjow wegpojgjogwjpowg8w0ggwghwgwphgwgwkjgjwg\",\n        \"RentPrice\": 0,\n        \"Title\": \"new title\",\n        \"SalePrice\": 0,\n        \"Rating\": 8,\n        \"Stock\": 16,\n        \"Damage\": \"fwfef\",\n        \"LocationID\": 1,\n        \"Image\": \"https://pa1.narvii.com/7329/061b825b65222f25684b74768ac7892c9547311ar1-676-769_hq.gif\",\n        \"Publisher_Name\": \"a\"\n    },\n    {\n        \"BookID\": 9,\n        \"ReleaseYear\": 2005,\n        \"PageCount\": 1532,\n        \"Description\": \" the greatest book ever. Very good and stuff happens in it\",\n        \"RentPrice\": 45,\n        \"Title\": \"899\",\n        \"SalePrice\": 33,\n        \"Rating\": 3,\n        \"Stock\": 22,\n        \"Damage\": \"heavy\",\n        \"LocationID\": 1,\n        \"Image\": \"https://i.pinimg.com/originals/2c/25/28/2c2528244450fcf743ac2eff3b9f914d.jpg\",\n        \"Publisher_Name\": \"Yae publishing house\"\n    }\n]"
						}
					]
				},
				{
					"name": "Endpoint 8",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "ReleaseYear",
									"value": "2002",
									"description": "integer",
									"type": "text"
								},
								{
									"key": "PageCount",
									"value": "304",
									"description": "integer",
									"type": "text"
								},
								{
									"key": "RentPrice",
									"value": "5",
									"description": "integer",
									"type": "text"
								},
								{
									"key": "Title",
									"value": "Book3",
									"description": "varchar (50)",
									"type": "text"
								},
								{
									"key": "SalePrice",
									"value": "45",
									"description": "integer",
									"type": "text"
								},
								{
									"key": "Rating",
									"value": "3",
									"description": "integer",
									"type": "text"
								},
								{
									"key": "Stock",
									"value": "1",
									"description": "integer",
									"type": "text"
								},
								{
									"key": "Damage",
									"value": "3",
									"description": "varchar (50)",
									"type": "text"
								},
								{
									"key": "LocationID",
									"value": "1",
									"description": "integer",
									"type": "text"
								},
								{
									"key": "Image",
									"value": "https://tenor.com/view/yoinky-sploinky-jerma-jerma985-yoinky-sploinky-gif-22804720",
									"description": "varchar (50)",
									"type": "text"
								},
								{
									"key": "Publisher_Name",
									"value": "a",
									"description": "varchar (50)",
									"type": "text"
								},
								{
									"key": "Description",
									"value": "a",
									"description": "varchar (200)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/book/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"book",
								""
							]
						},
						"description": "#### Description\n\nUser posts a book on the website"
					},
					"response": [
						{
							"name": "Endpoint 8",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "ReleaseYear",
											"value": "2002",
											"description": "integer",
											"type": "text"
										},
										{
											"key": "PageCount",
											"value": "304",
											"description": "integer",
											"type": "text"
										},
										{
											"key": "RentPrice",
											"value": "5",
											"description": "integer",
											"type": "text"
										},
										{
											"key": "Title",
											"value": "Book3",
											"description": "varchar (50)",
											"type": "text"
										},
										{
											"key": "SalePrice",
											"value": "45",
											"description": "integer",
											"type": "text"
										},
										{
											"key": "Rating",
											"value": "3",
											"description": "integer",
											"type": "text"
										},
										{
											"key": "Stock",
											"value": "1",
											"description": "integer",
											"type": "text"
										},
										{
											"key": "Damage",
											"value": "3",
											"description": "varchar (50)",
											"type": "text"
										},
										{
											"key": "LocationID",
											"value": "1",
											"description": "integer",
											"type": "text"
										},
										{
											"key": "Image",
											"value": "https://tenor.com/view/yoinky-sploinky-jerma-jerma985-yoinky-sploinky-gif-22804720",
											"description": "varchar (50)",
											"type": "text"
										},
										{
											"key": "Publisher_Name",
											"value": "a",
											"description": "varchar (50)",
											"type": "text"
										},
										{
											"key": "Description",
											"value": "a",
											"description": "varchar (200)",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://127.0.0.1:8000/book/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"book",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 07:37:56 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, PATCH, DELETE, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "2"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "11"
						}
					]
				},
				{
					"name": "Endpoint 9",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "BookID",
									"value": "1",
									"description": "integer",
									"type": "text"
								},
								{
									"key": "BookGenre",
									"value": "Action",
									"description": "varchar (50)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/genre/book/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"genre",
								"book",
								""
							]
						},
						"description": "#### Description\n\nAssign genre to a book"
					},
					"response": [
						{
							"name": "Endpoint 9",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "BookID",
											"value": "3",
											"type": "text"
										},
										{
											"key": "BookGenre",
											"value": "Action",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://127.0.0.1:8000/genre/book/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"genre",
										"book",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 11 Apr 2022 05:19:11 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, DELETE, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "2"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "\"\""
						},
						{
							"name": "Endpoint 9 error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "BookID",
											"value": "1",
											"type": "text"
										},
										{
											"key": "BookGenre",
											"value": "Action",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://127.0.0.1:8000/genre/book/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"genre",
										"book",
										""
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 11 Apr 2022 05:45:53 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "text/html"
								},
								{
									"key": "Vary",
									"value": "Origin, Cookie"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "99524"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n        <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n        <title>DoesNotExist\n          at /genre/book/</title>\n        <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    summary { cursor: pointer; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands, summary.commands { margin-left: 40px; }\n    div.commands a, summary.commands { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n    .fname { user-select: all; }\n  </style>\n        <script>\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = 'none';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll('ol.pre-context'));\n      hideAll(document.querySelectorAll('ol.post-context'));\n      hideAll(document.querySelectorAll('div.pastebin'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == 'none' ? 'block': 'none';\n        }\n      }\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle('browserTraceback', 'pastebinTraceback');\n      return false;\n    }\n  \n        </script>\n    </head>\n    <body>\n        <div id=\"summary\">\n            <h1>DoesNotExist\n       at /genre/book/</h1>\n            <pre class=\"exception_value\">Book matching query does not exist.</pre>\n            <table class=\"meta\">\n                <tr>\n                    <th>Request Method:</th>\n                    <td>POST</td>\n                </tr>\n                <tr>\n                    <th>Request URL:</th>\n                    <td>http://127.0.0.1:8000/genre/book/</td>\n                </tr>\n                <tr>\n                    <th>Django Version:</th>\n                    <td>4.0.3</td>\n                </tr>\n                <tr>\n                    <th>Exception Type:</th>\n                    <td>DoesNotExist</td>\n                </tr>\n                <tr>\n                    <th>Exception Value:</th>\n                    <td>\n                        <pre>Book matching query does not exist.</pre>\n                    </td>\n                </tr>\n                <tr>\n                    <th>Exception Location:</th>\n                    <td>\n                        <span class=\"fname\">C:\\Users\\quinn\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\django\\db\\models\\query.py</span>, line 496, in get\n                    </td>\n                </tr>\n                <tr>\n                    <th>Python Executable:</th>\n                    <td>C:\\Users\\quinn\\AppData\\Local\\Microsoft\\WindowsApps\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\python.exe</td>\n                </tr>\n                <tr>\n                    <th>Python Version:</th>\n                    <td>3.9.12</td>\n                </tr>\n                <tr>\n                    <th>Python Path:</th>\n                    <td>\n                        <pre>[&#x27;U:\\\\CPSC471\\\\BookMarketplaceApp&#x27;,\n &#x27;C:\\\\Program &#x27;\n &#x27;Files\\\\WindowsApps\\\\PythonSoftwareFoundation.Python.3.9_3.9.3312.0_x64__qbz5n2kfra8p0\\\\python39.zip&#x27;,\n &#x27;C:\\\\Program &#x27;\n &#x27;Files\\\\WindowsApps\\\\PythonSoftwareFoundation.Python.3.9_3.9.3312.0_x64__qbz5n2kfra8p0\\\\DLLs&#x27;,\n &#x27;C:\\\\Program &#x27;\n &#x27;Files\\\\WindowsApps\\\\PythonSoftwareFoundation.Python.3.9_3.9.3312.0_x64__qbz5n2kfra8p0\\\\lib&#x27;,\n &#x27;C:\\\\Users\\\\quinn\\\\AppData\\\\Local\\\\Microsoft\\\\WindowsApps\\\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0&#x27;,\n &#x27;C:\\\\Users\\\\quinn\\\\AppData\\\\Local\\\\Packages\\\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\\\LocalCache\\\\local-packages\\\\Python39\\\\site-packages&#x27;,\n &#x27;C:\\\\Program &#x27;\n &#x27;Files\\\\WindowsApps\\\\PythonSoftwareFoundation.Python.3.9_3.9.3312.0_x64__qbz5n2kfra8p0&#x27;,\n &#x27;C:\\\\Program &#x27;\n &#x27;Files\\\\WindowsApps\\\\PythonSoftwareFoundation.Python.3.9_3.9.3312.0_x64__qbz5n2kfra8p0\\\\lib\\\\site-packages&#x27;]</pre>\n                    </td>\n                </tr>\n                <tr>\n                    <th>Server time:</th>\n                    <td>Mon, 11 Apr 2022 05:45:53 +0000</td>\n                </tr>\n            </table>\n        </div>\n        <div id=\"traceback\">\n            <h2>Traceback \n                <span class=\"commands\">\n                    <a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a>\n                </span>\n            </h2>\n            <div id=\"browserTraceback\">\n                <ul class=\"traceback\">\n                    <li class=\"frame django\">\n                        <code class=\"fname\">C:\\Users\\quinn\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\django\\core\\handlers\\exception.py</code>, line 55, in inner\n                        <div class=\"context\" id=\"c2668947480256\">\n                            <ol start=\"48\" class=\"pre-context\" id=\"pre2668947480256\">\n                                <li onclick=\"toggle('pre2668947480256', 'post2668947480256')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480256', 'post2668947480256')\">\n                                    <pre>        return inner</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480256', 'post2668947480256')\">\n                                    <pre>    else:</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480256', 'post2668947480256')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480256', 'post2668947480256')\">\n                                    <pre>        @wraps(get_response)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480256', 'post2668947480256')\">\n                                    <pre>        def inner(request):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480256', 'post2668947480256')\">\n                                    <pre>            try:</pre>\n                                </li>\n                            </ol>\n                            <ol start=\"55\" class=\"context-line\">\n                                <li onclick=\"toggle('pre2668947480256', 'post2668947480256')\">\n                                    <pre>                response = get_response(request)</pre>\n                                    <span>…</span>\n                                </li>\n                            </ol>\n                            <ol start='56' class=\"post-context\" id=\"post2668947480256\">\n                                <li onclick=\"toggle('pre2668947480256', 'post2668947480256')\">\n                                    <pre>            except Exception as exc:</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480256', 'post2668947480256')\">\n                                    <pre>                response = response_for_exception(request, exc)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480256', 'post2668947480256')\">\n                                    <pre>            return response</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480256', 'post2668947480256')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480256', 'post2668947480256')\">\n                                    <pre>        return inner</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480256', 'post2668947480256')\">\n                                    <pre></pre>\n                                </li>\n                            </ol>\n                        </div>\n                        <details>\n                            <summary class=\"commands\">Local vars</summary>\n                            <table class=\"vars\" id=\"v2668947480256\">\n                                <thead>\n                                    <tr>\n                                        <th>Variable</th>\n                                        <th>Value</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td>exc</td>\n                                        <td class=\"code\">\n                                            <pre>DoesNotExist(&#x27;Book matching query does not exist.&#x27;)</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>get_response</td>\n                                        <td class=\"code\">\n                                            <pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x0000026D6797A4F0&gt;&gt;</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>request</td>\n                                        <td class=\"code\">\n                                            <pre>&lt;WSGIRequest: POST &#x27;/genre/book/&#x27;&gt;</pre>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </details>\n                    </li>\n                    <li class=\"frame django\">\n                        <code class=\"fname\">C:\\Users\\quinn\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\django\\core\\handlers\\base.py</code>, line 197, in _get_response\n                        <div class=\"context\" id=\"c2668947478848\">\n                            <ol start=\"190\" class=\"pre-context\" id=\"pre2668947478848\">\n                                <li onclick=\"toggle('pre2668947478848', 'post2668947478848')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947478848', 'post2668947478848')\">\n                                    <pre>        if response is None:</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947478848', 'post2668947478848')\">\n                                    <pre>            wrapped_callback = self.make_view_atomic(callback)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947478848', 'post2668947478848')\">\n                                    <pre>            # If it is an asynchronous view, run it in a subthread.</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947478848', 'post2668947478848')\">\n                                    <pre>            if asyncio.iscoroutinefunction(wrapped_callback):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947478848', 'post2668947478848')\">\n                                    <pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947478848', 'post2668947478848')\">\n                                    <pre>            try:</pre>\n                                </li>\n                            </ol>\n                            <ol start=\"197\" class=\"context-line\">\n                                <li onclick=\"toggle('pre2668947478848', 'post2668947478848')\">\n                                    <pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre>\n                                    <span>…</span>\n                                </li>\n                            </ol>\n                            <ol start='198' class=\"post-context\" id=\"post2668947478848\">\n                                <li onclick=\"toggle('pre2668947478848', 'post2668947478848')\">\n                                    <pre>            except Exception as e:</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947478848', 'post2668947478848')\">\n                                    <pre>                response = self.process_exception_by_middleware(e, request)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947478848', 'post2668947478848')\">\n                                    <pre>                if response is None:</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947478848', 'post2668947478848')\">\n                                    <pre>                    raise</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947478848', 'post2668947478848')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947478848', 'post2668947478848')\">\n                                    <pre>        # Complain if the view returned None (a common error).</pre>\n                                </li>\n                            </ol>\n                        </div>\n                        <details>\n                            <summary class=\"commands\">Local vars</summary>\n                            <table class=\"vars\" id=\"v2668947478848\">\n                                <thead>\n                                    <tr>\n                                        <th>Variable</th>\n                                        <th>Value</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td>callback</td>\n                                        <td class=\"code\">\n                                            <pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x0000026D6938E700&gt;</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>callback_args</td>\n                                        <td class=\"code\">\n                                            <pre>()</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>callback_kwargs</td>\n                                        <td class=\"code\">\n                                            <pre>{}</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>middleware_method</td>\n                                        <td class=\"code\">\n                                            <pre>&lt;bound method CorsMiddleware.process_view of &lt;CorsMiddleware get_response=BaseHandler._get_response&gt;&gt;</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>request</td>\n                                        <td class=\"code\">\n                                            <pre>&lt;WSGIRequest: POST &#x27;/genre/book/&#x27;&gt;</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>response</td>\n                                        <td class=\"code\">\n                                            <pre>None</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>self</td>\n                                        <td class=\"code\">\n                                            <pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x0000026D6797A4F0&gt;</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>wrapped_callback</td>\n                                        <td class=\"code\">\n                                            <pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x0000026D6938E700&gt;</pre>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </details>\n                    </li>\n                    <li class=\"frame django\">\n                        <code class=\"fname\">C:\\Users\\quinn\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\django\\views\\decorators\\csrf.py</code>, line 54, in wrapped_view\n                        <div class=\"context\" id=\"c2668947480512\">\n                            <ol start=\"47\" class=\"pre-context\" id=\"pre2668947480512\">\n                                <li onclick=\"toggle('pre2668947480512', 'post2668947480512')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480512', 'post2668947480512')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480512', 'post2668947480512')\">\n                                    <pre>def csrf_exempt(view_func):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480512', 'post2668947480512')\">\n                                    <pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480512', 'post2668947480512')\">\n                                    <pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480512', 'post2668947480512')\">\n                                    <pre>    # if they don&#x27;t have side effects, so return a new function.</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480512', 'post2668947480512')\">\n                                    <pre>    def wrapped_view(*args, **kwargs):</pre>\n                                </li>\n                            </ol>\n                            <ol start=\"54\" class=\"context-line\">\n                                <li onclick=\"toggle('pre2668947480512', 'post2668947480512')\">\n                                    <pre>        return view_func(*args, **kwargs)</pre>\n                                    <span>…</span>\n                                </li>\n                            </ol>\n                            <ol start='55' class=\"post-context\" id=\"post2668947480512\">\n                                <li onclick=\"toggle('pre2668947480512', 'post2668947480512')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480512', 'post2668947480512')\">\n                                    <pre>    wrapped_view.csrf_exempt = True</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480512', 'post2668947480512')\">\n                                    <pre>    return wraps(view_func)(wrapped_view)</pre>\n                                </li>\n                            </ol>\n                        </div>\n                        <details>\n                            <summary class=\"commands\">Local vars</summary>\n                            <table class=\"vars\" id=\"v2668947480512\">\n                                <thead>\n                                    <tr>\n                                        <th>Variable</th>\n                                        <th>Value</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td>args</td>\n                                        <td class=\"code\">\n                                            <pre>(&lt;WSGIRequest: POST &#x27;/genre/book/&#x27;&gt;,)</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>kwargs</td>\n                                        <td class=\"code\">\n                                            <pre>{}</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>view_func</td>\n                                        <td class=\"code\">\n                                            <pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x0000026D6938E670&gt;</pre>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </details>\n                    </li>\n                    <li class=\"frame django\">\n                        <code class=\"fname\">C:\\Users\\quinn\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\django\\views\\generic\\base.py</code>, line 84, in view\n                        <div class=\"context\" id=\"c2668946795584\">\n                            <ol start=\"77\" class=\"pre-context\" id=\"pre2668946795584\">\n                                <li onclick=\"toggle('pre2668946795584', 'post2668946795584')\">\n                                    <pre>            self = cls(**initkwargs)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668946795584', 'post2668946795584')\">\n                                    <pre>            self.setup(request, *args, **kwargs)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668946795584', 'post2668946795584')\">\n                                    <pre>            if not hasattr(self, &quot;request&quot;):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668946795584', 'post2668946795584')\">\n                                    <pre>                raise AttributeError(</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668946795584', 'post2668946795584')\">\n                                    <pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668946795584', 'post2668946795584')\">\n                                    <pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668946795584', 'post2668946795584')\">\n                                    <pre>                )</pre>\n                                </li>\n                            </ol>\n                            <ol start=\"84\" class=\"context-line\">\n                                <li onclick=\"toggle('pre2668946795584', 'post2668946795584')\">\n                                    <pre>            return self.dispatch(request, *args, **kwargs)</pre>\n                                    <span>…</span>\n                                </li>\n                            </ol>\n                            <ol start='85' class=\"post-context\" id=\"post2668946795584\">\n                                <li onclick=\"toggle('pre2668946795584', 'post2668946795584')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668946795584', 'post2668946795584')\">\n                                    <pre>        view.view_class = cls</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668946795584', 'post2668946795584')\">\n                                    <pre>        view.view_initkwargs = initkwargs</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668946795584', 'post2668946795584')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668946795584', 'post2668946795584')\">\n                                    <pre>        # __name__ and __qualname__ are intentionally left unchanged as</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668946795584', 'post2668946795584')\">\n                                    <pre>        # view_class should be used to robustly determine the name of the view</pre>\n                                </li>\n                            </ol>\n                        </div>\n                        <details>\n                            <summary class=\"commands\">Local vars</summary>\n                            <table class=\"vars\" id=\"v2668946795584\">\n                                <thead>\n                                    <tr>\n                                        <th>Variable</th>\n                                        <th>Value</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td>args</td>\n                                        <td class=\"code\">\n                                            <pre>()</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>cls</td>\n                                        <td class=\"code\">\n                                            <pre>&lt;class &#x27;BookMarketplaceApp.views.GenreView&#x27;&gt;</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>initkwargs</td>\n                                        <td class=\"code\">\n                                            <pre>{}</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>kwargs</td>\n                                        <td class=\"code\">\n                                            <pre>{}</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>request</td>\n                                        <td class=\"code\">\n                                            <pre>&lt;WSGIRequest: POST &#x27;/genre/book/&#x27;&gt;</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>self</td>\n                                        <td class=\"code\">\n                                            <pre>&lt;BookMarketplaceApp.views.GenreView object at 0x0000026D69920FD0&gt;</pre>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </details>\n                    </li>\n                    <li class=\"frame user\">\n                        <code class=\"fname\">C:\\Users\\quinn\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\rest_framework\\views.py</code>, line 509, in dispatch\n                        <div class=\"context\" id=\"c2668947476672\">\n                            <ol start=\"502\" class=\"pre-context\" id=\"pre2668947476672\">\n                                <li onclick=\"toggle('pre2668947476672', 'post2668947476672')\">\n                                    <pre>                                  self.http_method_not_allowed)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947476672', 'post2668947476672')\">\n                                    <pre>            else:</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947476672', 'post2668947476672')\">\n                                    <pre>                handler = self.http_method_not_allowed</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947476672', 'post2668947476672')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947476672', 'post2668947476672')\">\n                                    <pre>            response = handler(request, *args, **kwargs)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947476672', 'post2668947476672')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947476672', 'post2668947476672')\">\n                                    <pre>        except Exception as exc:</pre>\n                                </li>\n                            </ol>\n                            <ol start=\"509\" class=\"context-line\">\n                                <li onclick=\"toggle('pre2668947476672', 'post2668947476672')\">\n                                    <pre>            response = self.handle_exception(exc)</pre>\n                                    <span>…</span>\n                                </li>\n                            </ol>\n                            <ol start='510' class=\"post-context\" id=\"post2668947476672\">\n                                <li onclick=\"toggle('pre2668947476672', 'post2668947476672')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947476672', 'post2668947476672')\">\n                                    <pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947476672', 'post2668947476672')\">\n                                    <pre>        return self.response</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947476672', 'post2668947476672')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947476672', 'post2668947476672')\">\n                                    <pre>    def options(self, request, *args, **kwargs):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947476672', 'post2668947476672')\">\n                                    <pre>        &quot;&quot;&quot;</pre>\n                                </li>\n                            </ol>\n                        </div>\n                        <details>\n                            <summary class=\"commands\">Local vars</summary>\n                            <table class=\"vars\" id=\"v2668947476672\">\n                                <thead>\n                                    <tr>\n                                        <th>Variable</th>\n                                        <th>Value</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td>args</td>\n                                        <td class=\"code\">\n                                            <pre>()</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>handler</td>\n                                        <td class=\"code\">\n                                            <pre>&lt;bound method GenreView.post of &lt;BookMarketplaceApp.views.GenreView object at 0x0000026D69920FD0&gt;&gt;</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>kwargs</td>\n                                        <td class=\"code\">\n                                            <pre>{}</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>request</td>\n                                        <td class=\"code\">\n                                            <pre>&lt;rest_framework.request.Request: POST &#x27;/genre/book/&#x27;&gt;</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>self</td>\n                                        <td class=\"code\">\n                                            <pre>&lt;BookMarketplaceApp.views.GenreView object at 0x0000026D69920FD0&gt;</pre>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </details>\n                    </li>\n                    <li class=\"frame user\">\n                        <code class=\"fname\">C:\\Users\\quinn\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\rest_framework\\views.py</code>, line 469, in handle_exception\n                        <div class=\"context\" id=\"c2668947478464\">\n                            <ol start=\"462\" class=\"pre-context\" id=\"pre2668947478464\">\n                                <li onclick=\"toggle('pre2668947478464', 'post2668947478464')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947478464', 'post2668947478464')\">\n                                    <pre>        exception_handler = self.get_exception_handler()</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947478464', 'post2668947478464')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947478464', 'post2668947478464')\">\n                                    <pre>        context = self.get_exception_handler_context()</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947478464', 'post2668947478464')\">\n                                    <pre>        response = exception_handler(exc, context)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947478464', 'post2668947478464')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947478464', 'post2668947478464')\">\n                                    <pre>        if response is None:</pre>\n                                </li>\n                            </ol>\n                            <ol start=\"469\" class=\"context-line\">\n                                <li onclick=\"toggle('pre2668947478464', 'post2668947478464')\">\n                                    <pre>            self.raise_uncaught_exception(exc)</pre>\n                                    <span>…</span>\n                                </li>\n                            </ol>\n                            <ol start='470' class=\"post-context\" id=\"post2668947478464\">\n                                <li onclick=\"toggle('pre2668947478464', 'post2668947478464')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947478464', 'post2668947478464')\">\n                                    <pre>        response.exception = True</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947478464', 'post2668947478464')\">\n                                    <pre>        return response</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947478464', 'post2668947478464')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947478464', 'post2668947478464')\">\n                                    <pre>    def raise_uncaught_exception(self, exc):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947478464', 'post2668947478464')\">\n                                    <pre>        if settings.DEBUG:</pre>\n                                </li>\n                            </ol>\n                        </div>\n                        <details>\n                            <summary class=\"commands\">Local vars</summary>\n                            <table class=\"vars\" id=\"v2668947478464\">\n                                <thead>\n                                    <tr>\n                                        <th>Variable</th>\n                                        <th>Value</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td>context</td>\n                                        <td class=\"code\">\n                                            <pre>{&#x27;args&#x27;: (),\n &#x27;kwargs&#x27;: {},\n &#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/genre/book/&#x27;&gt;,\n &#x27;view&#x27;: &lt;BookMarketplaceApp.views.GenreView object at 0x0000026D69920FD0&gt;}</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>exc</td>\n                                        <td class=\"code\">\n                                            <pre>DoesNotExist(&#x27;Book matching query does not exist.&#x27;)</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>exception_handler</td>\n                                        <td class=\"code\">\n                                            <pre>&lt;function exception_handler at 0x0000026D6934EAF0&gt;</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>response</td>\n                                        <td class=\"code\">\n                                            <pre>None</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>self</td>\n                                        <td class=\"code\">\n                                            <pre>&lt;BookMarketplaceApp.views.GenreView object at 0x0000026D69920FD0&gt;</pre>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </details>\n                    </li>\n                    <li class=\"frame user\">\n                        <code class=\"fname\">C:\\Users\\quinn\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\rest_framework\\views.py</code>, line 480, in raise_uncaught_exception\n                        <div class=\"context\" id=\"c2668947479872\">\n                            <ol start=\"473\" class=\"pre-context\" id=\"pre2668947479872\">\n                                <li onclick=\"toggle('pre2668947479872', 'post2668947479872')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479872', 'post2668947479872')\">\n                                    <pre>    def raise_uncaught_exception(self, exc):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479872', 'post2668947479872')\">\n                                    <pre>        if settings.DEBUG:</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479872', 'post2668947479872')\">\n                                    <pre>            request = self.request</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479872', 'post2668947479872')\">\n                                    <pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479872', 'post2668947479872')\">\n                                    <pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479872', 'post2668947479872')\">\n                                    <pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre>\n                                </li>\n                            </ol>\n                            <ol start=\"480\" class=\"context-line\">\n                                <li onclick=\"toggle('pre2668947479872', 'post2668947479872')\">\n                                    <pre>        raise exc</pre>\n                                    <span>…</span>\n                                </li>\n                            </ol>\n                            <ol start='481' class=\"post-context\" id=\"post2668947479872\">\n                                <li onclick=\"toggle('pre2668947479872', 'post2668947479872')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479872', 'post2668947479872')\">\n                                    <pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479872', 'post2668947479872')\">\n                                    <pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479872', 'post2668947479872')\">\n                                    <pre>    # be overridden.</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479872', 'post2668947479872')\">\n                                    <pre>    def dispatch(self, request, *args, **kwargs):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479872', 'post2668947479872')\">\n                                    <pre>        &quot;&quot;&quot;</pre>\n                                </li>\n                            </ol>\n                        </div>\n                        <details>\n                            <summary class=\"commands\">Local vars</summary>\n                            <table class=\"vars\" id=\"v2668947479872\">\n                                <thead>\n                                    <tr>\n                                        <th>Variable</th>\n                                        <th>Value</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td>exc</td>\n                                        <td class=\"code\">\n                                            <pre>DoesNotExist(&#x27;Book matching query does not exist.&#x27;)</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>renderer_format</td>\n                                        <td class=\"code\">\n                                            <pre>&#x27;json&#x27;</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>request</td>\n                                        <td class=\"code\">\n                                            <pre>&lt;rest_framework.request.Request: POST &#x27;/genre/book/&#x27;&gt;</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>self</td>\n                                        <td class=\"code\">\n                                            <pre>&lt;BookMarketplaceApp.views.GenreView object at 0x0000026D69920FD0&gt;</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>use_plaintext_traceback</td>\n                                        <td class=\"code\">\n                                            <pre>True</pre>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </details>\n                    </li>\n                    <li class=\"frame user\">\n                        <code class=\"fname\">C:\\Users\\quinn\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\rest_framework\\views.py</code>, line 506, in dispatch\n                        <div class=\"context\" id=\"c2668947479232\">\n                            <ol start=\"499\" class=\"pre-context\" id=\"pre2668947479232\">\n                                <li onclick=\"toggle('pre2668947479232', 'post2668947479232')\">\n                                    <pre>            # Get the appropriate handler method</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479232', 'post2668947479232')\">\n                                    <pre>            if request.method.lower() in self.http_method_names:</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479232', 'post2668947479232')\">\n                                    <pre>                handler = getattr(self, request.method.lower(),</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479232', 'post2668947479232')\">\n                                    <pre>                                  self.http_method_not_allowed)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479232', 'post2668947479232')\">\n                                    <pre>            else:</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479232', 'post2668947479232')\">\n                                    <pre>                handler = self.http_method_not_allowed</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479232', 'post2668947479232')\">\n                                    <pre></pre>\n                                </li>\n                            </ol>\n                            <ol start=\"506\" class=\"context-line\">\n                                <li onclick=\"toggle('pre2668947479232', 'post2668947479232')\">\n                                    <pre>            response = handler(request, *args, **kwargs)</pre>\n                                    <span>…</span>\n                                </li>\n                            </ol>\n                            <ol start='507' class=\"post-context\" id=\"post2668947479232\">\n                                <li onclick=\"toggle('pre2668947479232', 'post2668947479232')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479232', 'post2668947479232')\">\n                                    <pre>        except Exception as exc:</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479232', 'post2668947479232')\">\n                                    <pre>            response = self.handle_exception(exc)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479232', 'post2668947479232')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479232', 'post2668947479232')\">\n                                    <pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479232', 'post2668947479232')\">\n                                    <pre>        return self.response</pre>\n                                </li>\n                            </ol>\n                        </div>\n                        <details>\n                            <summary class=\"commands\">Local vars</summary>\n                            <table class=\"vars\" id=\"v2668947479232\">\n                                <thead>\n                                    <tr>\n                                        <th>Variable</th>\n                                        <th>Value</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td>args</td>\n                                        <td class=\"code\">\n                                            <pre>()</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>handler</td>\n                                        <td class=\"code\">\n                                            <pre>&lt;bound method GenreView.post of &lt;BookMarketplaceApp.views.GenreView object at 0x0000026D69920FD0&gt;&gt;</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>kwargs</td>\n                                        <td class=\"code\">\n                                            <pre>{}</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>request</td>\n                                        <td class=\"code\">\n                                            <pre>&lt;rest_framework.request.Request: POST &#x27;/genre/book/&#x27;&gt;</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>self</td>\n                                        <td class=\"code\">\n                                            <pre>&lt;BookMarketplaceApp.views.GenreView object at 0x0000026D69920FD0&gt;</pre>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </details>\n                    </li>\n                    <li class=\"frame user\">\n                        <code class=\"fname\">U:\\CPSC471\\BookMarketplaceApp\\BookMarketplaceApp\\views.py</code>, line 225, in post\n                        <div class=\"context\" id=\"c2668947479296\">\n                            <ol start=\"218\" class=\"pre-context\" id=\"pre2668947479296\">\n                                <li onclick=\"toggle('pre2668947479296', 'post2668947479296')\">\n                                    <pre>    serializer_class = GenreSerializer</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479296', 'post2668947479296')\">\n                                    <pre>    # add genre to book</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479296', 'post2668947479296')\">\n                                    <pre>    def post(self, request, *args, **kwargs):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479296', 'post2668947479296')\">\n                                    <pre>        </pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479296', 'post2668947479296')\">\n                                    <pre>        book_id = request.data[&#x27;BookID&#x27;]</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479296', 'post2668947479296')\">\n                                    <pre>        book_genre = request.data[&#x27;BookGenre&#x27;]</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479296', 'post2668947479296')\">\n                                    <pre>            </pre>\n                                </li>\n                            </ol>\n                            <ol start=\"225\" class=\"context-line\">\n                                <li onclick=\"toggle('pre2668947479296', 'post2668947479296')\">\n                                    <pre>        book = Book.objects.get(BookID=book_id)</pre>\n                                    <span>…</span>\n                                </li>\n                            </ol>\n                            <ol start='226' class=\"post-context\" id=\"post2668947479296\">\n                                <li onclick=\"toggle('pre2668947479296', 'post2668947479296')\">\n                                    <pre>        new_genre = Book_Genres(Book_ID=book, BookGenre=book_genre)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479296', 'post2668947479296')\">\n                                    <pre>        new_genre.save()</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479296', 'post2668947479296')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479296', 'post2668947479296')\">\n                                    <pre>        return Response(&quot;&quot;, status=status.HTTP_200_OK)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479296', 'post2668947479296')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947479296', 'post2668947479296')\">\n                                    <pre>    # returns genres of book</pre>\n                                </li>\n                            </ol>\n                        </div>\n                        <details>\n                            <summary class=\"commands\">Local vars</summary>\n                            <table class=\"vars\" id=\"v2668947479296\">\n                                <thead>\n                                    <tr>\n                                        <th>Variable</th>\n                                        <th>Value</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td>args</td>\n                                        <td class=\"code\">\n                                            <pre>()</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>book_genre</td>\n                                        <td class=\"code\">\n                                            <pre>&#x27;Action&#x27;</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>book_id</td>\n                                        <td class=\"code\">\n                                            <pre>&#x27;1&#x27;</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>kwargs</td>\n                                        <td class=\"code\">\n                                            <pre>{}</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>request</td>\n                                        <td class=\"code\">\n                                            <pre>&lt;rest_framework.request.Request: POST &#x27;/genre/book/&#x27;&gt;</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>self</td>\n                                        <td class=\"code\">\n                                            <pre>&lt;BookMarketplaceApp.views.GenreView object at 0x0000026D69920FD0&gt;</pre>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </details>\n                    </li>\n                    <li class=\"frame django\">\n                        <code class=\"fname\">C:\\Users\\quinn\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\django\\db\\models\\manager.py</code>, line 85, in manager_method\n                        <div class=\"context\" id=\"c2668947476736\">\n                            <ol start=\"78\" class=\"pre-context\" id=\"pre2668947476736\">\n                                <li onclick=\"toggle('pre2668947476736', 'post2668947476736')\">\n                                    <pre>    def check(self, **kwargs):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947476736', 'post2668947476736')\">\n                                    <pre>        return []</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947476736', 'post2668947476736')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947476736', 'post2668947476736')\">\n                                    <pre>    @classmethod</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947476736', 'post2668947476736')\">\n                                    <pre>    def _get_queryset_methods(cls, queryset_class):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947476736', 'post2668947476736')\">\n                                    <pre>        def create_method(name, method):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947476736', 'post2668947476736')\">\n                                    <pre>            def manager_method(self, *args, **kwargs):</pre>\n                                </li>\n                            </ol>\n                            <ol start=\"85\" class=\"context-line\">\n                                <li onclick=\"toggle('pre2668947476736', 'post2668947476736')\">\n                                    <pre>                return getattr(self.get_queryset(), name)(*args, **kwargs)</pre>\n                                    <span>…</span>\n                                </li>\n                            </ol>\n                            <ol start='86' class=\"post-context\" id=\"post2668947476736\">\n                                <li onclick=\"toggle('pre2668947476736', 'post2668947476736')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947476736', 'post2668947476736')\">\n                                    <pre>            manager_method.__name__ = method.__name__</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947476736', 'post2668947476736')\">\n                                    <pre>            manager_method.__doc__ = method.__doc__</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947476736', 'post2668947476736')\">\n                                    <pre>            return manager_method</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947476736', 'post2668947476736')\">\n                                    <pre></pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947476736', 'post2668947476736')\">\n                                    <pre>        new_methods = {}</pre>\n                                </li>\n                            </ol>\n                        </div>\n                        <details>\n                            <summary class=\"commands\">Local vars</summary>\n                            <table class=\"vars\" id=\"v2668947476736\">\n                                <thead>\n                                    <tr>\n                                        <th>Variable</th>\n                                        <th>Value</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td>args</td>\n                                        <td class=\"code\">\n                                            <pre>()</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>kwargs</td>\n                                        <td class=\"code\">\n                                            <pre>{&#x27;BookID&#x27;: &#x27;1&#x27;}</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>name</td>\n                                        <td class=\"code\">\n                                            <pre>&#x27;get&#x27;</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>self</td>\n                                        <td class=\"code\">\n                                            <pre>&lt;django.db.models.manager.Manager object at 0x0000026D6915B1F0&gt;</pre>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </details>\n                    </li>\n                    <li class=\"frame django\">\n                        <code class=\"fname\">C:\\Users\\quinn\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\django\\db\\models\\query.py</code>, line 496, in get\n                        <div class=\"context\" id=\"c2668947480384\">\n                            <ol start=\"489\" class=\"pre-context\" id=\"pre2668947480384\">\n                                <li onclick=\"toggle('pre2668947480384', 'post2668947480384')\">\n                                    <pre>        ):</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480384', 'post2668947480384')\">\n                                    <pre>            limit = MAX_GET_RESULTS</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480384', 'post2668947480384')\">\n                                    <pre>            clone.query.set_limits(high=limit)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480384', 'post2668947480384')\">\n                                    <pre>        num = len(clone)</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480384', 'post2668947480384')\">\n                                    <pre>        if num == 1:</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480384', 'post2668947480384')\">\n                                    <pre>            return clone._result_cache[0]</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480384', 'post2668947480384')\">\n                                    <pre>        if not num:</pre>\n                                </li>\n                            </ol>\n                            <ol start=\"496\" class=\"context-line\">\n                                <li onclick=\"toggle('pre2668947480384', 'post2668947480384')\">\n                                    <pre>            raise self.model.DoesNotExist(</pre>\n                                    <span>…</span>\n                                </li>\n                            </ol>\n                            <ol start='497' class=\"post-context\" id=\"post2668947480384\">\n                                <li onclick=\"toggle('pre2668947480384', 'post2668947480384')\">\n                                    <pre>                &quot;%s matching query does not exist.&quot; % self.model._meta.object_name</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480384', 'post2668947480384')\">\n                                    <pre>            )</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480384', 'post2668947480384')\">\n                                    <pre>        raise self.model.MultipleObjectsReturned(</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480384', 'post2668947480384')\">\n                                    <pre>            &quot;get() returned more than one %s -- it returned %s!&quot;</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480384', 'post2668947480384')\">\n                                    <pre>            % (</pre>\n                                </li>\n                                <li onclick=\"toggle('pre2668947480384', 'post2668947480384')\">\n                                    <pre>                self.model._meta.object_name,</pre>\n                                </li>\n                            </ol>\n                        </div>\n                        <details>\n                            <summary class=\"commands\">Local vars</summary>\n                            <table class=\"vars\" id=\"v2668947480384\">\n                                <thead>\n                                    <tr>\n                                        <th>Variable</th>\n                                        <th>Value</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td>args</td>\n                                        <td class=\"code\">\n                                            <pre>()</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>clone</td>\n                                        <td class=\"code\">\n                                            <pre>&lt;QuerySet []&gt;</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>kwargs</td>\n                                        <td class=\"code\">\n                                            <pre>{&#x27;BookID&#x27;: &#x27;1&#x27;}</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>limit</td>\n                                        <td class=\"code\">\n                                            <pre>21</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>num</td>\n                                        <td class=\"code\">\n                                            <pre>0</pre>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>self</td>\n                                        <td class=\"code\">\n                                            <pre>&lt;QuerySet [&lt;Book: Book object (2)&gt;, &lt;Book: Book object (3)&gt;, &lt;Book: Book object (4)&gt;, &lt;Book: Book object (5)&gt;, &lt;Book: Book object (6)&gt;, &lt;Book: Book object (7)&gt;, &lt;Book: Book object (8)&gt;, &lt;Book: Book object (9)&gt;, &lt;Book: Book object (10)&gt;, &lt;Book: Book object (11)&gt;, &lt;Book: Book object (12)&gt;, &lt;Book: Book object (13)&gt;, &lt;Book: Book object (28)&gt;]&gt;</pre>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </details>\n                    </li>\n                </ul>\n            </div>\n            <form action=\"https://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n                <div id=\"pastebinTraceback\" class=\"pastebin\">\n                    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n                    <input type=\"hidden\" name=\"title\"\n      value=\"DoesNotExist at /genre/book/\">\n                    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n                    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n                    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: POST\nRequest URL: http://127.0.0.1:8000/genre/book/\n\nDjango Version: 4.0.3\nPython Version: 3.9.12\nInstalled Applications:\n[&#x27;django.contrib.admin&#x27;,\n &#x27;django.contrib.auth&#x27;,\n &#x27;django.contrib.contenttypes&#x27;,\n &#x27;django.contrib.sessions&#x27;,\n &#x27;django.contrib.messages&#x27;,\n &#x27;django.contrib.staticfiles&#x27;,\n &#x27;corsheaders&#x27;,\n &#x27;rest_framework&#x27;,\n &#x27;BookMarketplaceApp&#x27;]\nInstalled Middleware:\n[&#x27;django.middleware.security.SecurityMiddleware&#x27;,\n &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,\n &#x27;django.middleware.common.CommonMiddleware&#x27;,\n &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,\n &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,\n &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,\n &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,\n &#x27;corsheaders.middleware.CorsMiddleware&#x27;]\n\n\n\nTraceback (most recent call last):\n  File \"C:\\Users\\quinn\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\django\\core\\handlers\\exception.py\", line 55, in inner\n    response = get_response(request)\n  File \"C:\\Users\\quinn\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\django\\core\\handlers\\base.py\", line 197, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"C:\\Users\\quinn\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\django\\views\\decorators\\csrf.py\", line 54, in wrapped_view\n    return view_func(*args, **kwargs)\n  File \"C:\\Users\\quinn\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\django\\views\\generic\\base.py\", line 84, in view\n    return self.dispatch(request, *args, **kwargs)\n  File \"C:\\Users\\quinn\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\rest_framework\\views.py\", line 509, in dispatch\n    response = self.handle_exception(exc)\n  File \"C:\\Users\\quinn\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\rest_framework\\views.py\", line 469, in handle_exception\n    self.raise_uncaught_exception(exc)\n  File \"C:\\Users\\quinn\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\rest_framework\\views.py\", line 480, in raise_uncaught_exception\n    raise exc\n  File \"C:\\Users\\quinn\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\rest_framework\\views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"U:\\CPSC471\\BookMarketplaceApp\\BookMarketplaceApp\\views.py\", line 225, in post\n    book = Book.objects.get(BookID=book_id)\n  File \"C:\\Users\\quinn\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\django\\db\\models\\manager.py\", line 85, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"C:\\Users\\quinn\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\django\\db\\models\\query.py\", line 496, in get\n    raise self.model.DoesNotExist(\n\nException Type: DoesNotExist at /genre/book/\nException Value: Book matching query does not exist.\n</textarea>\n                    <br>\n                    <br>\n                    <input type=\"submit\" value=\"Share this traceback on a public website\">\n  \n                </div>\n            </form>\n        </div>\n        <div id=\"requestinfo\">\n            <h2>Request information</h2>\n            <h3 id=\"user-info\">USER</h3>\n            <p>AnonymousUser</p>\n            <h3 id=\"get-info\">GET</h3>\n            <p>No GET data</p>\n            <h3 id=\"post-info\">POST</h3>\n            <table class=\"req\">\n                <thead>\n                    <tr>\n                        <th>Variable</th>\n                        <th>Value</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>BookID</td>\n                        <td class=\"code\">\n                            <pre>&#x27;1&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>BookGenre</td>\n                        <td class=\"code\">\n                            <pre>&#x27;Action&#x27;</pre>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            <h3 id=\"files-info\">FILES</h3>\n            <p>No FILES data</p>\n            <h3 id=\"cookie-info\">COOKIES</h3>\n            <p>No cookie data</p>\n            <h3 id=\"meta-info\">META</h3>\n            <table class=\"req\">\n                <thead>\n                    <tr>\n                        <th>Variable</th>\n                        <th>Value</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>ALLUSERSPROFILE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;C:\\\\ProgramData&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>APPDATA</td>\n                        <td class=\"code\">\n                            <pre>&#x27;C:\\\\Users\\\\quinn\\\\AppData\\\\Roaming&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CHROME_CRASHPAD_PIPE_NAME</td>\n                        <td class=\"code\">\n                            <pre>&#x27;\\\\\\\\.\\\\pipe\\\\crashpad_9088_LPBLNWQUEWCDCZXF&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>COLORTERM</td>\n                        <td class=\"code\">\n                            <pre>&#x27;truecolor&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>COMMONPROGRAMFILES</td>\n                        <td class=\"code\">\n                            <pre>&#x27;C:\\\\Program Files\\\\Common Files&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>COMMONPROGRAMFILES(X86)</td>\n                        <td class=\"code\">\n                            <pre>&#x27;C:\\\\Program Files (x86)\\\\Common Files&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>COMMONPROGRAMW6432</td>\n                        <td class=\"code\">\n                            <pre>&#x27;C:\\\\Program Files\\\\Common Files&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>COMPUTERNAME</td>\n                        <td class=\"code\">\n                            <pre>&#x27;DESKTOP-NLI95SD&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>COMSPEC</td>\n                        <td class=\"code\">\n                            <pre>&#x27;C:\\\\Windows\\\\system32\\\\cmd.exe&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CONTENT_LENGTH</td>\n                        <td class=\"code\">\n                            <pre>&#x27;276&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CONTENT_TYPE</td>\n                        <td class=\"code\">\n                            <pre>(&#x27;multipart/form-data; &#x27;\n &#x27;boundary=--------------------------698324907043413408693265&#x27;)</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DJANGO_SETTINGS_MODULE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;BookMarketplaceApp.settings&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DRIVERDATA</td>\n                        <td class=\"code\">\n                            <pre>&#x27;C:\\\\Windows\\\\System32\\\\Drivers\\\\DriverData&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>GATEWAY_INTERFACE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;CGI/1.1&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>GIT_ASKPASS</td>\n                        <td class=\"code\">\n                            <pre>&#x27;********************&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HOMEDRIVE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;C:&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HOMEPATH</td>\n                        <td class=\"code\">\n                            <pre>&#x27;\\\\Users\\\\quinn&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_ACCEPT</td>\n                        <td class=\"code\">\n                            <pre>&#x27;*/*&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_ACCEPT_ENCODING</td>\n                        <td class=\"code\">\n                            <pre>&#x27;gzip, deflate, br&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_CONNECTION</td>\n                        <td class=\"code\">\n                            <pre>&#x27;keep-alive&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_HOST</td>\n                        <td class=\"code\">\n                            <pre>&#x27;127.0.0.1:8000&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_POSTMAN_TOKEN</td>\n                        <td class=\"code\">\n                            <pre>&#x27;********************&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_USER_AGENT</td>\n                        <td class=\"code\">\n                            <pre>&#x27;PostmanRuntime/7.29.0&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LANG</td>\n                        <td class=\"code\">\n                            <pre>&#x27;en_US.UTF-8&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LOCALAPPDATA</td>\n                        <td class=\"code\">\n                            <pre>&#x27;C:\\\\Users\\\\quinn\\\\AppData\\\\Local&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LOGONSERVER</td>\n                        <td class=\"code\">\n                            <pre>&#x27;\\\\\\\\DESKTOP-NLI95SD&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>NUMBER_OF_PROCESSORS</td>\n                        <td class=\"code\">\n                            <pre>&#x27;12&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>ONEDRIVE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;C:\\\\Users\\\\quinn\\\\OneDrive&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>ONEDRIVECONSUMER</td>\n                        <td class=\"code\">\n                            <pre>&#x27;C:\\\\Users\\\\quinn\\\\OneDrive&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>ORIGINAL_XDG_CURRENT_DESKTOP</td>\n                        <td class=\"code\">\n                            <pre>&#x27;undefined&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>OS</td>\n                        <td class=\"code\">\n                            <pre>&#x27;Windows_NT&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>PATH</td>\n                        <td class=\"code\">\n                            <pre>(&#x27;C:\\\\Program Files (x86)\\\\Common Files\\\\Oracle\\\\Java\\\\javapath;C:\\\\Program &#x27;\n &#x27;Files (x86)\\\\NVIDIA &#x27;\n &#x27;Corporation\\\\PhysX\\\\Common;C:\\\\Windows\\\\system32;C:\\\\Windows;C:\\\\Windows\\\\System32\\\\Wbem;C:\\\\Windows\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\;C:\\\\Windows\\\\System32\\\\OpenSSH\\\\;C:\\\\Program &#x27;\n &#x27;Files\\\\Git\\\\cmd;C:\\\\Program Files\\\\Microchip\\\\xc16\\\\v1.70\\\\bin;C:\\\\Program &#x27;\n &#x27;Files\\\\nodejs\\\\;C:\\\\Program Files\\\\dotnet\\\\;C:\\\\Program Files\\\\MySQL\\\\MySQL &#x27;\n &#x27;Shell &#x27;\n &#x27;8.0\\\\bin\\\\;C:\\\\Users\\\\quinn\\\\AppData\\\\Local\\\\Microsoft\\\\WindowsApps;C:\\\\Users\\\\quinn\\\\AppData\\\\Local\\\\Programs\\\\Microsoft &#x27;\n &#x27;VS &#x27;\n &#x27;Code\\\\bin;C:\\\\Users\\\\quinn\\\\AppData\\\\Local\\\\GitHubDesktop\\\\bin;C:\\\\Users\\\\quinn\\\\AppData\\\\Roaming\\\\npm;C:\\\\Users\\\\quinn\\\\.dotnet\\\\tools;C:\\\\msys64\\\\mingw64\\\\bin;&#x27;)</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>PATHEXT</td>\n                        <td class=\"code\">\n                            <pre>&#x27;.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>PATH_INFO</td>\n                        <td class=\"code\">\n                            <pre>&#x27;/genre/book/&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>PROCESSOR_ARCHITECTURE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;AMD64&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>PROCESSOR_IDENTIFIER</td>\n                        <td class=\"code\">\n                            <pre>&#x27;AMD64 Family 23 Model 8 Stepping 2, AuthenticAMD&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>PROCESSOR_LEVEL</td>\n                        <td class=\"code\">\n                            <pre>&#x27;23&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>PROCESSOR_REVISION</td>\n                        <td class=\"code\">\n                            <pre>&#x27;0802&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>PROGRAMDATA</td>\n                        <td class=\"code\">\n                            <pre>&#x27;C:\\\\ProgramData&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>PROGRAMFILES</td>\n                        <td class=\"code\">\n                            <pre>&#x27;C:\\\\Program Files&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>PROGRAMFILES(X86)</td>\n                        <td class=\"code\">\n                            <pre>&#x27;C:\\\\Program Files (x86)&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>PROGRAMW6432</td>\n                        <td class=\"code\">\n                            <pre>&#x27;C:\\\\Program Files&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>PSMODULEPATH</td>\n                        <td class=\"code\">\n                            <pre>(&#x27;C:\\\\Users\\\\quinn\\\\OneDrive\\\\Documents\\\\WindowsPowerShell\\\\Modules;C:\\\\Program &#x27;\n &#x27;Files\\\\WindowsPowerShell\\\\Modules;C:\\\\Windows\\\\system32\\\\WindowsPowerShell\\\\v1.0\\\\Modules&#x27;)</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>PUBLIC</td>\n                        <td class=\"code\">\n                            <pre>&#x27;C:\\\\Users\\\\Public&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>PYTHONUSERBASE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;C:\\\\Users\\\\quinn\\\\AppData\\\\Local\\\\Packages\\\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\\\LocalCache\\\\local-packages&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>QUERY_STRING</td>\n                        <td class=\"code\">\n                            <pre>&#x27;&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>REMOTE_ADDR</td>\n                        <td class=\"code\">\n                            <pre>&#x27;127.0.0.1&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>REMOTE_HOST</td>\n                        <td class=\"code\">\n                            <pre>&#x27;&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>REQUEST_METHOD</td>\n                        <td class=\"code\">\n                            <pre>&#x27;POST&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>RUN_MAIN</td>\n                        <td class=\"code\">\n                            <pre>&#x27;true&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SCRIPT_NAME</td>\n                        <td class=\"code\">\n                            <pre>&#x27;&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SERVER_NAME</td>\n                        <td class=\"code\">\n                            <pre>&#x27;DESKTOP-NLI95SD&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SERVER_PORT</td>\n                        <td class=\"code\">\n                            <pre>&#x27;8000&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SERVER_PROTOCOL</td>\n                        <td class=\"code\">\n                            <pre>&#x27;HTTP/1.1&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SERVER_SOFTWARE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;WSGIServer/0.2&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SESSIONNAME</td>\n                        <td class=\"code\">\n                            <pre>&#x27;Console&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SYSTEMDRIVE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;C:&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SYSTEMROOT</td>\n                        <td class=\"code\">\n                            <pre>&#x27;C:\\\\Windows&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>TEMP</td>\n                        <td class=\"code\">\n                            <pre>&#x27;C:\\\\Users\\\\quinn\\\\AppData\\\\Local\\\\Temp&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>TERM_PROGRAM</td>\n                        <td class=\"code\">\n                            <pre>&#x27;vscode&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>TERM_PROGRAM_VERSION</td>\n                        <td class=\"code\">\n                            <pre>&#x27;1.66.1&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>TMP</td>\n                        <td class=\"code\">\n                            <pre>&#x27;C:\\\\Users\\\\quinn\\\\AppData\\\\Local\\\\Temp&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>USERDOMAIN</td>\n                        <td class=\"code\">\n                            <pre>&#x27;DESKTOP-NLI95SD&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>USERDOMAIN_ROAMINGPROFILE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;DESKTOP-NLI95SD&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>USERNAME</td>\n                        <td class=\"code\">\n                            <pre>&#x27;quinn&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>USERPROFILE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;C:\\\\Users\\\\quinn&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>VSCODE_GIT_ASKPASS_EXTRA_ARGS</td>\n                        <td class=\"code\">\n                            <pre>&#x27;********************&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>VSCODE_GIT_ASKPASS_MAIN</td>\n                        <td class=\"code\">\n                            <pre>&#x27;********************&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>VSCODE_GIT_ASKPASS_NODE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;********************&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>VSCODE_GIT_IPC_HANDLE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;\\\\\\\\.\\\\pipe\\\\vscode-git-dc1d64e126-sock&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>WINDIR</td>\n                        <td class=\"code\">\n                            <pre>&#x27;C:\\\\Windows&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>wsgi.errors</td>\n                        <td class=\"code\">\n                            <pre>&lt;_io.TextIOWrapper name=&#x27;&lt;stderr&gt;&#x27; mode=&#x27;w&#x27; encoding=&#x27;utf-8&#x27;&gt;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>wsgi.file_wrapper</td>\n                        <td class=\"code\">\n                            <pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>wsgi.input</td>\n                        <td class=\"code\">\n                            <pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0x0000026D69920940&gt;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>wsgi.multiprocess</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>wsgi.multithread</td>\n                        <td class=\"code\">\n                            <pre>True</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>wsgi.run_once</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>wsgi.url_scheme</td>\n                        <td class=\"code\">\n                            <pre>&#x27;http&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>wsgi.version</td>\n                        <td class=\"code\">\n                            <pre>(1, 0)</pre>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            <h3 id=\"settings-info\">Settings</h3>\n            <h4>Using settings module \n                <code>BookMarketplaceApp.settings</code>\n            </h4>\n            <table class=\"req\">\n                <thead>\n                    <tr>\n                        <th>Setting</th>\n                        <th>Value</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>ABSOLUTE_URL_OVERRIDES</td>\n                        <td class=\"code\">\n                            <pre>{}</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>ADMINS</td>\n                        <td class=\"code\">\n                            <pre>[]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>ALLOWED_HOSTS</td>\n                        <td class=\"code\">\n                            <pre>[]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>APPEND_SLASH</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>AUTHENTICATION_BACKENDS</td>\n                        <td class=\"code\">\n                            <pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>AUTH_PASSWORD_VALIDATORS</td>\n                        <td class=\"code\">\n                            <pre>&#x27;********************&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>AUTH_USER_MODEL</td>\n                        <td class=\"code\">\n                            <pre>&#x27;auth.User&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>BASE_DIR</td>\n                        <td class=\"code\">\n                            <pre>WindowsPath(&#x27;C:/Users/quinn/OneDrive/Documents/University/Winter2022/CPSC471/BookMarketplaceApp&#x27;)</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CACHES</td>\n                        <td class=\"code\">\n                            <pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CACHE_MIDDLEWARE_ALIAS</td>\n                        <td class=\"code\">\n                            <pre>&#x27;default&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\n                        <td class=\"code\">\n                            <pre>&#x27;********************&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CACHE_MIDDLEWARE_SECONDS</td>\n                        <td class=\"code\">\n                            <pre>600</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CORS_ORIGIN_WHITELIST</td>\n                        <td class=\"code\">\n                            <pre>[&#x27;http://localhost:3000&#x27;]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CSRF_COOKIE_AGE</td>\n                        <td class=\"code\">\n                            <pre>31449600</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CSRF_COOKIE_DOMAIN</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CSRF_COOKIE_HTTPONLY</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CSRF_COOKIE_NAME</td>\n                        <td class=\"code\">\n                            <pre>&#x27;csrftoken&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CSRF_COOKIE_PATH</td>\n                        <td class=\"code\">\n                            <pre>&#x27;/&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CSRF_COOKIE_SAMESITE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;Lax&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CSRF_COOKIE_SECURE</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CSRF_FAILURE_VIEW</td>\n                        <td class=\"code\">\n                            <pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CSRF_HEADER_NAME</td>\n                        <td class=\"code\">\n                            <pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CSRF_TRUSTED_ORIGINS</td>\n                        <td class=\"code\">\n                            <pre>[]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CSRF_USE_SESSIONS</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DATABASES</td>\n                        <td class=\"code\">\n                            <pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,\n             &#x27;AUTOCOMMIT&#x27;: True,\n             &#x27;CONN_MAX_AGE&#x27;: 0,\n             &#x27;ENGINE&#x27;: &#x27;django.db.backends.sqlite3&#x27;,\n             &#x27;HOST&#x27;: &#x27;&#x27;,\n             &#x27;NAME&#x27;: WindowsPath(&#x27;C:/Users/quinn/OneDrive/Documents/University/Winter2022/CPSC471/BookMarketplaceApp/db.sqlite3&#x27;),\n             &#x27;OPTIONS&#x27;: {},\n             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,\n             &#x27;PORT&#x27;: &#x27;&#x27;,\n             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,\n                      &#x27;COLLATION&#x27;: None,\n                      &#x27;MIGRATE&#x27;: True,\n                      &#x27;MIRROR&#x27;: None,\n                      &#x27;NAME&#x27;: None},\n             &#x27;TIME_ZONE&#x27;: None,\n             &#x27;USER&#x27;: &#x27;&#x27;}}</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DATABASE_ROUTERS</td>\n                        <td class=\"code\">\n                            <pre>[]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\n                        <td class=\"code\">\n                            <pre>2621440</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\n                        <td class=\"code\">\n                            <pre>1000</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DATETIME_FORMAT</td>\n                        <td class=\"code\">\n                            <pre>&#x27;N j, Y, P&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DATETIME_INPUT_FORMATS</td>\n                        <td class=\"code\">\n                            <pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,\n &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,\n &#x27;%Y-%m-%d %H:%M&#x27;,\n &#x27;%m/%d/%Y %H:%M:%S&#x27;,\n &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,\n &#x27;%m/%d/%Y %H:%M&#x27;,\n &#x27;%m/%d/%y %H:%M:%S&#x27;,\n &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,\n &#x27;%m/%d/%y %H:%M&#x27;]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DATE_FORMAT</td>\n                        <td class=\"code\">\n                            <pre>&#x27;N j, Y&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DATE_INPUT_FORMATS</td>\n                        <td class=\"code\">\n                            <pre>[&#x27;%Y-%m-%d&#x27;,\n &#x27;%m/%d/%Y&#x27;,\n &#x27;%m/%d/%y&#x27;,\n &#x27;%b %d %Y&#x27;,\n &#x27;%b %d, %Y&#x27;,\n &#x27;%d %b %Y&#x27;,\n &#x27;%d %b, %Y&#x27;,\n &#x27;%B %d %Y&#x27;,\n &#x27;%B %d, %Y&#x27;,\n &#x27;%d %B %Y&#x27;,\n &#x27;%d %B, %Y&#x27;]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DEBUG</td>\n                        <td class=\"code\">\n                            <pre>True</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DECIMAL_SEPARATOR</td>\n                        <td class=\"code\">\n                            <pre>&#x27;.&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DEFAULT_AUTO_FIELD</td>\n                        <td class=\"code\">\n                            <pre>&#x27;django.db.models.BigAutoField&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DEFAULT_CHARSET</td>\n                        <td class=\"code\">\n                            <pre>&#x27;utf-8&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DEFAULT_EXCEPTION_REPORTER</td>\n                        <td class=\"code\">\n                            <pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\n                        <td class=\"code\">\n                            <pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DEFAULT_FILE_STORAGE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;django.core.files.storage.FileSystemStorage&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DEFAULT_FROM_EMAIL</td>\n                        <td class=\"code\">\n                            <pre>&#x27;webmaster@localhost&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DEFAULT_INDEX_TABLESPACE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DEFAULT_TABLESPACE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>DISALLOWED_USER_AGENTS</td>\n                        <td class=\"code\">\n                            <pre>[]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>EMAIL_BACKEND</td>\n                        <td class=\"code\">\n                            <pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>EMAIL_HOST</td>\n                        <td class=\"code\">\n                            <pre>&#x27;localhost&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>EMAIL_HOST_PASSWORD</td>\n                        <td class=\"code\">\n                            <pre>&#x27;********************&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>EMAIL_HOST_USER</td>\n                        <td class=\"code\">\n                            <pre>&#x27;&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>EMAIL_PORT</td>\n                        <td class=\"code\">\n                            <pre>25</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>EMAIL_SSL_CERTFILE</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>EMAIL_SSL_KEYFILE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;********************&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>EMAIL_SUBJECT_PREFIX</td>\n                        <td class=\"code\">\n                            <pre>&#x27;[Django] &#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>EMAIL_TIMEOUT</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>EMAIL_USE_LOCALTIME</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>EMAIL_USE_SSL</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>EMAIL_USE_TLS</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>FILE_UPLOAD_HANDLERS</td>\n                        <td class=\"code\">\n                            <pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,\n &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\n                        <td class=\"code\">\n                            <pre>2621440</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>FILE_UPLOAD_PERMISSIONS</td>\n                        <td class=\"code\">\n                            <pre>420</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>FILE_UPLOAD_TEMP_DIR</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>FIRST_DAY_OF_WEEK</td>\n                        <td class=\"code\">\n                            <pre>0</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>FIXTURE_DIRS</td>\n                        <td class=\"code\">\n                            <pre>[]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>FORCE_SCRIPT_NAME</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>FORMAT_MODULE_PATH</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>FORM_RENDERER</td>\n                        <td class=\"code\">\n                            <pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>IGNORABLE_404_URLS</td>\n                        <td class=\"code\">\n                            <pre>[]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>INSTALLED_APPS</td>\n                        <td class=\"code\">\n                            <pre>[&#x27;django.contrib.admin&#x27;,\n &#x27;django.contrib.auth&#x27;,\n &#x27;django.contrib.contenttypes&#x27;,\n &#x27;django.contrib.sessions&#x27;,\n &#x27;django.contrib.messages&#x27;,\n &#x27;django.contrib.staticfiles&#x27;,\n &#x27;corsheaders&#x27;,\n &#x27;rest_framework&#x27;,\n &#x27;BookMarketplaceApp&#x27;]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>INTERNAL_IPS</td>\n                        <td class=\"code\">\n                            <pre>[]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LANGUAGES</td>\n                        <td class=\"code\">\n                            <pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),\n (&#x27;ar&#x27;, &#x27;Arabic&#x27;),\n (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),\n (&#x27;ast&#x27;, &#x27;Asturian&#x27;),\n (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),\n (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),\n (&#x27;be&#x27;, &#x27;Belarusian&#x27;),\n (&#x27;bn&#x27;, &#x27;Bengali&#x27;),\n (&#x27;br&#x27;, &#x27;Breton&#x27;),\n (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),\n (&#x27;ca&#x27;, &#x27;Catalan&#x27;),\n (&#x27;cs&#x27;, &#x27;Czech&#x27;),\n (&#x27;cy&#x27;, &#x27;Welsh&#x27;),\n (&#x27;da&#x27;, &#x27;Danish&#x27;),\n (&#x27;de&#x27;, &#x27;German&#x27;),\n (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),\n (&#x27;el&#x27;, &#x27;Greek&#x27;),\n (&#x27;en&#x27;, &#x27;English&#x27;),\n (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),\n (&#x27;en-gb&#x27;, &#x27;British English&#x27;),\n (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),\n (&#x27;es&#x27;, &#x27;Spanish&#x27;),\n (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),\n (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),\n (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),\n (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),\n (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),\n (&#x27;et&#x27;, &#x27;Estonian&#x27;),\n (&#x27;eu&#x27;, &#x27;Basque&#x27;),\n (&#x27;fa&#x27;, &#x27;Persian&#x27;),\n (&#x27;fi&#x27;, &#x27;Finnish&#x27;),\n (&#x27;fr&#x27;, &#x27;French&#x27;),\n (&#x27;fy&#x27;, &#x27;Frisian&#x27;),\n (&#x27;ga&#x27;, &#x27;Irish&#x27;),\n (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),\n (&#x27;gl&#x27;, &#x27;Galician&#x27;),\n (&#x27;he&#x27;, &#x27;Hebrew&#x27;),\n (&#x27;hi&#x27;, &#x27;Hindi&#x27;),\n (&#x27;hr&#x27;, &#x27;Croatian&#x27;),\n (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),\n (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),\n (&#x27;hy&#x27;, &#x27;Armenian&#x27;),\n (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),\n (&#x27;id&#x27;, &#x27;Indonesian&#x27;),\n (&#x27;ig&#x27;, &#x27;Igbo&#x27;),\n (&#x27;io&#x27;, &#x27;Ido&#x27;),\n (&#x27;is&#x27;, &#x27;Icelandic&#x27;),\n (&#x27;it&#x27;, &#x27;Italian&#x27;),\n (&#x27;ja&#x27;, &#x27;Japanese&#x27;),\n (&#x27;ka&#x27;, &#x27;Georgian&#x27;),\n (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),\n (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),\n (&#x27;km&#x27;, &#x27;Khmer&#x27;),\n (&#x27;kn&#x27;, &#x27;Kannada&#x27;),\n (&#x27;ko&#x27;, &#x27;Korean&#x27;),\n (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),\n (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),\n (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),\n (&#x27;lv&#x27;, &#x27;Latvian&#x27;),\n (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),\n (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),\n (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),\n (&#x27;mr&#x27;, &#x27;Marathi&#x27;),\n (&#x27;ms&#x27;, &#x27;Malay&#x27;),\n (&#x27;my&#x27;, &#x27;Burmese&#x27;),\n (&#x27;nb&#x27;, &#x27;Norwegian Bokmål&#x27;),\n (&#x27;ne&#x27;, &#x27;Nepali&#x27;),\n (&#x27;nl&#x27;, &#x27;Dutch&#x27;),\n (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),\n (&#x27;os&#x27;, &#x27;Ossetic&#x27;),\n (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),\n (&#x27;pl&#x27;, &#x27;Polish&#x27;),\n (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),\n (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),\n (&#x27;ro&#x27;, &#x27;Romanian&#x27;),\n (&#x27;ru&#x27;, &#x27;Russian&#x27;),\n (&#x27;sk&#x27;, &#x27;Slovak&#x27;),\n (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),\n (&#x27;sq&#x27;, &#x27;Albanian&#x27;),\n (&#x27;sr&#x27;, &#x27;Serbian&#x27;),\n (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),\n (&#x27;sv&#x27;, &#x27;Swedish&#x27;),\n (&#x27;sw&#x27;, &#x27;Swahili&#x27;),\n (&#x27;ta&#x27;, &#x27;Tamil&#x27;),\n (&#x27;te&#x27;, &#x27;Telugu&#x27;),\n (&#x27;tg&#x27;, &#x27;Tajik&#x27;),\n (&#x27;th&#x27;, &#x27;Thai&#x27;),\n (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),\n (&#x27;tr&#x27;, &#x27;Turkish&#x27;),\n (&#x27;tt&#x27;, &#x27;Tatar&#x27;),\n (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),\n (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),\n (&#x27;ur&#x27;, &#x27;Urdu&#x27;),\n (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),\n (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),\n (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),\n (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LANGUAGES_BIDI</td>\n                        <td class=\"code\">\n                            <pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;fa&#x27;, &#x27;ur&#x27;]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LANGUAGE_CODE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;en-us&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LANGUAGE_COOKIE_AGE</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LANGUAGE_COOKIE_DOMAIN</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LANGUAGE_COOKIE_HTTPONLY</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LANGUAGE_COOKIE_NAME</td>\n                        <td class=\"code\">\n                            <pre>&#x27;django_language&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LANGUAGE_COOKIE_PATH</td>\n                        <td class=\"code\">\n                            <pre>&#x27;/&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LANGUAGE_COOKIE_SAMESITE</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LANGUAGE_COOKIE_SECURE</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LOCALE_PATHS</td>\n                        <td class=\"code\">\n                            <pre>[]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LOGGING</td>\n                        <td class=\"code\">\n                            <pre>{}</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LOGGING_CONFIG</td>\n                        <td class=\"code\">\n                            <pre>&#x27;logging.config.dictConfig&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LOGIN_REDIRECT_URL</td>\n                        <td class=\"code\">\n                            <pre>&#x27;/accounts/profile/&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LOGIN_URL</td>\n                        <td class=\"code\">\n                            <pre>&#x27;/accounts/login/&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>LOGOUT_REDIRECT_URL</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>MANAGERS</td>\n                        <td class=\"code\">\n                            <pre>[]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>MEDIA_ROOT</td>\n                        <td class=\"code\">\n                            <pre>&#x27;&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>MEDIA_URL</td>\n                        <td class=\"code\">\n                            <pre>&#x27;/&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>MESSAGE_STORAGE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>MIDDLEWARE</td>\n                        <td class=\"code\">\n                            <pre>[&#x27;django.middleware.security.SecurityMiddleware&#x27;,\n &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,\n &#x27;django.middleware.common.CommonMiddleware&#x27;,\n &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,\n &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,\n &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,\n &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,\n &#x27;corsheaders.middleware.CorsMiddleware&#x27;]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>MIGRATION_MODULES</td>\n                        <td class=\"code\">\n                            <pre>{}</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>MONTH_DAY_FORMAT</td>\n                        <td class=\"code\">\n                            <pre>&#x27;F j&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>NUMBER_GROUPING</td>\n                        <td class=\"code\">\n                            <pre>0</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>PASSWORD_HASHERS</td>\n                        <td class=\"code\">\n                            <pre>&#x27;********************&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>PASSWORD_RESET_TIMEOUT</td>\n                        <td class=\"code\">\n                            <pre>&#x27;********************&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>PREPEND_WWW</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>ROOT_URLCONF</td>\n                        <td class=\"code\">\n                            <pre>&#x27;BookMarketplaceApp.urls&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SECRET_KEY</td>\n                        <td class=\"code\">\n                            <pre>&#x27;********************&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\n                        <td class=\"code\">\n                            <pre>True</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>\n                        <td class=\"code\">\n                            <pre>&#x27;same-origin&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SECURE_HSTS_PRELOAD</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SECURE_HSTS_SECONDS</td>\n                        <td class=\"code\">\n                            <pre>0</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SECURE_PROXY_SSL_HEADER</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SECURE_REDIRECT_EXEMPT</td>\n                        <td class=\"code\">\n                            <pre>[]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SECURE_REFERRER_POLICY</td>\n                        <td class=\"code\">\n                            <pre>&#x27;same-origin&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SECURE_SSL_HOST</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SECURE_SSL_REDIRECT</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SERVER_EMAIL</td>\n                        <td class=\"code\">\n                            <pre>&#x27;root@localhost&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SESSION_CACHE_ALIAS</td>\n                        <td class=\"code\">\n                            <pre>&#x27;default&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SESSION_COOKIE_AGE</td>\n                        <td class=\"code\">\n                            <pre>1209600</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SESSION_COOKIE_DOMAIN</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SESSION_COOKIE_HTTPONLY</td>\n                        <td class=\"code\">\n                            <pre>True</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SESSION_COOKIE_NAME</td>\n                        <td class=\"code\">\n                            <pre>&#x27;sessionid&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SESSION_COOKIE_PATH</td>\n                        <td class=\"code\">\n                            <pre>&#x27;/&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SESSION_COOKIE_SAMESITE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;Lax&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SESSION_COOKIE_SECURE</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SESSION_ENGINE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SESSION_FILE_PATH</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SESSION_SAVE_EVERY_REQUEST</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SESSION_SERIALIZER</td>\n                        <td class=\"code\">\n                            <pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SETTINGS_MODULE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;BookMarketplaceApp.settings&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SHORT_DATETIME_FORMAT</td>\n                        <td class=\"code\">\n                            <pre>&#x27;m/d/Y P&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SHORT_DATE_FORMAT</td>\n                        <td class=\"code\">\n                            <pre>&#x27;m/d/Y&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SIGNING_BACKEND</td>\n                        <td class=\"code\">\n                            <pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SILENCED_SYSTEM_CHECKS</td>\n                        <td class=\"code\">\n                            <pre>[]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>STATICFILES_DIRS</td>\n                        <td class=\"code\">\n                            <pre>[]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>STATICFILES_FINDERS</td>\n                        <td class=\"code\">\n                            <pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,\n &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>STATICFILES_STORAGE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>STATIC_ROOT</td>\n                        <td class=\"code\">\n                            <pre>None</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>STATIC_URL</td>\n                        <td class=\"code\">\n                            <pre>&#x27;/static/&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>TEMPLATES</td>\n                        <td class=\"code\">\n                            <pre>[{&#x27;APP_DIRS&#x27;: True,\n  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,\n  &#x27;DIRS&#x27;: [],\n  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,\n                                     &#x27;django.template.context_processors.request&#x27;,\n                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,\n                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>TEST_NON_SERIALIZED_APPS</td>\n                        <td class=\"code\">\n                            <pre>[]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>TEST_RUNNER</td>\n                        <td class=\"code\">\n                            <pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>THOUSAND_SEPARATOR</td>\n                        <td class=\"code\">\n                            <pre>&#x27;,&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>TIME_FORMAT</td>\n                        <td class=\"code\">\n                            <pre>&#x27;P&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>TIME_INPUT_FORMATS</td>\n                        <td class=\"code\">\n                            <pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>TIME_ZONE</td>\n                        <td class=\"code\">\n                            <pre>&#x27;UTC&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>USE_DEPRECATED_PYTZ</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>USE_I18N</td>\n                        <td class=\"code\">\n                            <pre>True</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>USE_L10N</td>\n                        <td class=\"code\">\n                            <pre>True</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>USE_THOUSAND_SEPARATOR</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>USE_TZ</td>\n                        <td class=\"code\">\n                            <pre>True</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>USE_X_FORWARDED_HOST</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>USE_X_FORWARDED_PORT</td>\n                        <td class=\"code\">\n                            <pre>False</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>WSGI_APPLICATION</td>\n                        <td class=\"code\">\n                            <pre>&#x27;BookMarketplaceApp.wsgi.application&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>X_FRAME_OPTIONS</td>\n                        <td class=\"code\">\n                            <pre>&#x27;DENY&#x27;</pre>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>YEAR_MONTH_FORMAT</td>\n                        <td class=\"code\">\n                            <pre>&#x27;F Y&#x27;</pre>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div id=\"explanation\">\n            <p>\n      You’re seeing this error because you have \n                <code>DEBUG = True</code> in your\n      Django settings file. Change that to\n                <code>False</code>, and Django will\n      display a standard page generated by the handler for this status code.\n            </p>\n        </div>\n    </body>\n</html>"
						}
					]
				},
				{
					"name": "Endpoint 10",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/genre/book/?BookID=3",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"genre",
								"book",
								""
							],
							"query": [
								{
									"key": "BookID",
									"value": "3",
									"description": "integer"
								}
							]
						},
						"description": "#### Description\n\nGet genres of a book"
					},
					"response": [
						{
							"name": "Endpoint 10",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://127.0.0.1:8000/genre/book/?BookID=3",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"genre",
										"book",
										""
									],
									"query": [
										{
											"key": "BookID",
											"value": "3"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 11 Apr 2022 05:20:33 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, DELETE, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "34"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "[\n    \"Action\",\n    \"comedy\",\n    \"ggg\",\n    \"horror\"\n]"
						}
					]
				},
				{
					"name": "Endpoint 11",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "Publisher_Name",
									"value": "a",
									"description": "varchar (50)",
									"type": "text"
								},
								{
									"key": "PageCount",
									"value": "54",
									"description": "integer",
									"type": "text"
								},
								{
									"key": "RentPrice",
									"value": "4",
									"description": "integer",
									"type": "text"
								},
								{
									"key": "Description",
									"value": "Test",
									"description": "varchar (200)",
									"type": "text"
								},
								{
									"key": "Title",
									"value": "Book3",
									"description": "varchar (50)",
									"type": "text"
								},
								{
									"key": "SalePrice",
									"value": "3",
									"description": "integer",
									"type": "text"
								},
								{
									"key": "Rating",
									"value": "6",
									"description": "integer",
									"type": "text"
								},
								{
									"key": "Stock",
									"value": "1",
									"description": "integer",
									"type": "text"
								},
								{
									"key": "Damage",
									"value": "2",
									"description": "varchar (50)",
									"type": "text"
								},
								{
									"key": "LocationID",
									"value": "1",
									"description": "integer",
									"type": "text"
								},
								{
									"key": "Image",
									"value": "image",
									"description": "varchar (50)",
									"type": "text"
								},
								{
									"key": "ReleaseYear",
									"value": "1980",
									"description": "integer",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/book/?BookID=3",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"book",
								""
							],
							"query": [
								{
									"key": "BookID",
									"value": "3",
									"description": "integer"
								}
							]
						},
						"description": "#### Description\n\nEdit book info"
					},
					"response": [
						{
							"name": "Endpoint 11",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Publisher_Name",
											"value": "a",
											"description": "varchar (50)",
											"type": "text"
										},
										{
											"key": "PageCount",
											"value": "54",
											"description": "integer",
											"type": "text"
										},
										{
											"key": "RentPrice",
											"value": "4",
											"description": "integer",
											"type": "text"
										},
										{
											"key": "Description",
											"value": "Test",
											"description": "varchar (200)",
											"type": "text"
										},
										{
											"key": "Title",
											"value": "Book3",
											"description": "varchar (50)",
											"type": "text"
										},
										{
											"key": "SalePrice",
											"value": "3",
											"description": "integer",
											"type": "text"
										},
										{
											"key": "Rating",
											"value": "6",
											"description": "integer",
											"type": "text"
										},
										{
											"key": "Stock",
											"value": "1",
											"description": "integer",
											"type": "text"
										},
										{
											"key": "Damage",
											"value": "2",
											"description": "varchar (50)",
											"type": "text"
										},
										{
											"key": "LocationID",
											"value": "1",
											"description": "integer",
											"type": "text"
										},
										{
											"key": "Image",
											"value": "image",
											"description": "varchar (50)",
											"type": "text"
										},
										{
											"key": "ReleaseYear",
											"value": "1980",
											"description": "integer",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://127.0.0.1:8000/book/?BookID=3",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"book",
										""
									],
									"query": [
										{
											"key": "BookID",
											"value": "3",
											"description": "integer"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 07:40:49 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, PATCH, DELETE, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "197"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"BookID\": 3,\n    \"ReleaseYear\": 1980,\n    \"PageCount\": 54,\n    \"Description\": \"Test\",\n    \"RentPrice\": 4,\n    \"Title\": \"Book3\",\n    \"SalePrice\": 3,\n    \"Rating\": 6,\n    \"Stock\": 1,\n    \"Damage\": \"2\",\n    \"LocationID\": 1,\n    \"Image\": \"image\",\n    \"Publisher_Name\": \"a\"\n}"
						}
					]
				},
				{
					"name": "Endpoint 28",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/book/?BookID=3",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"book",
								""
							],
							"query": [
								{
									"key": "BookID",
									"value": "3"
								}
							]
						},
						"description": "#### Description\n\nAdmin remove a book"
					},
					"response": [
						{
							"name": "Endpoint 28",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://127.0.0.1:8000/book/?BookID=3",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"book",
										""
									],
									"query": [
										{
											"key": "BookID",
											"value": "3"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 08:16:21 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, PATCH, DELETE, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "2"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "\"\""
						}
					]
				},
				{
					"name": "Endpoint 37",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/book/?Title=a",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"book",
								""
							],
							"query": [
								{
									"key": "Title",
									"value": "a",
									"description": "varchar (50)"
								}
							]
						},
						"description": "#### Description\n\nUsed to get all books with a certain title"
					},
					"response": [
						{
							"name": "Endpoint 37",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://127.0.0.1:8000/book/?Title=a",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"book",
										""
									],
									"query": [
										{
											"key": "Title",
											"value": "a"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 08:41:01 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, PATCH, DELETE, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "818"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"BookID\": 5,\n        \"ReleaseYear\": 0,\n        \"PageCount\": 3,\n        \"Description\": \"\",\n        \"RentPrice\": 12,\n        \"Title\": \"a\",\n        \"SalePrice\": 12,\n        \"Rating\": 1,\n        \"Stock\": 5,\n        \"Damage\": \"qdqwd\",\n        \"LocationID\": 1,\n        \"Image\": \"https://pa1.narvii.com/7329/061b825b65222f25684b74768ac7892c9547311ar1-676-769_hq.gif\",\n        \"Publisher_Name\": \"a\"\n    },\n    {\n        \"BookID\": 6,\n        \"ReleaseYear\": 0,\n        \"PageCount\": 3,\n        \"Description\": \"\",\n        \"RentPrice\": 12,\n        \"Title\": \"a\",\n        \"SalePrice\": 12,\n        \"Rating\": 1,\n        \"Stock\": 9,\n        \"Damage\": \"qdqwd\",\n        \"LocationID\": 1,\n        \"Image\": \"https://pa1.narvii.com/7329/061b825b65222f25684b74768ac7892c9547311ar1-676-769_hq.gif\",\n        \"Publisher_Name\": \"a\"\n    },\n    {\n        \"BookID\": 7,\n        \"ReleaseYear\": 0,\n        \"PageCount\": 3,\n        \"Description\": \"\",\n        \"RentPrice\": 12,\n        \"Title\": \"a\",\n        \"SalePrice\": 12,\n        \"Rating\": 1,\n        \"Stock\": 11,\n        \"Damage\": \"qdqwd\",\n        \"LocationID\": 1,\n        \"Image\": \"https://pa1.narvii.com/7329/061b825b65222f25684b74768ac7892c9547311ar1-676-769_hq.gif\",\n        \"Publisher_Name\": \"a\"\n    }\n]"
						}
					]
				}
			]
		},
		{
			"name": "publisher",
			"item": [
				{
					"name": "Endpoint 16",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "Name",
									"value": "NewPublisher",
									"description": "varchar (50)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/publisher/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"publisher",
								""
							]
						},
						"description": "#### Description\n\nAdd publisher"
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Name",
											"value": "NewPublisher",
											"description": "varchar (50)",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://127.0.0.1:8000/publisher/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"publisher",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 07:46:07 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "14"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "\"NewPublisher\""
						}
					]
				},
				{
					"name": "Endpoint 34",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/books/publisher/?Publisher_Name=a",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"books",
								"publisher",
								""
							],
							"query": [
								{
									"key": "Publisher_Name",
									"value": "a",
									"description": "varchar (50)"
								}
							]
						},
						"description": "#### Description\n\nGets all books for a publisher"
					},
					"response": [
						{
							"name": "Endpoint 34",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://127.0.0.1:8000/books/publisher/?Publisher_Name=a",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"books",
										"publisher",
										""
									],
									"query": [
										{
											"key": "Publisher_Name",
											"value": "a",
											"description": "varchar (50)"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 08:31:25 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "1043"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"BookID\": 4,\n        \"Title\": \"dddd\",\n        \"Rating\": 0,\n        \"Image\": \"https://pa1.narvii.com/7329/061b825b65222f25684b74768ac7892c9547311ar1-676-769_hq.gif\",\n        \"SalePrice\": 4,\n        \"RentPrice\": 4,\n        \"Stock\": 0\n    },\n    {\n        \"BookID\": 5,\n        \"Title\": \"a\",\n        \"Rating\": 1,\n        \"Image\": \"https://pa1.narvii.com/7329/061b825b65222f25684b74768ac7892c9547311ar1-676-769_hq.gif\",\n        \"SalePrice\": 12,\n        \"RentPrice\": 12,\n        \"Stock\": 5\n    },\n    {\n        \"BookID\": 6,\n        \"Title\": \"a\",\n        \"Rating\": 1,\n        \"Image\": \"https://pa1.narvii.com/7329/061b825b65222f25684b74768ac7892c9547311ar1-676-769_hq.gif\",\n        \"SalePrice\": 12,\n        \"RentPrice\": 12,\n        \"Stock\": 9\n    },\n    {\n        \"BookID\": 7,\n        \"Title\": \"a\",\n        \"Rating\": 1,\n        \"Image\": \"https://pa1.narvii.com/7329/061b825b65222f25684b74768ac7892c9547311ar1-676-769_hq.gif\",\n        \"SalePrice\": 12,\n        \"RentPrice\": 12,\n        \"Stock\": 11\n    },\n    {\n        \"BookID\": 8,\n        \"Title\": \"new title\",\n        \"Rating\": 8,\n        \"Image\": \"https://pa1.narvii.com/7329/061b825b65222f25684b74768ac7892c9547311ar1-676-769_hq.gif\",\n        \"SalePrice\": 0,\n        \"RentPrice\": 0,\n        \"Stock\": 16\n    },\n    {\n        \"BookID\": 11,\n        \"Title\": \"Book3\",\n        \"Rating\": 3,\n        \"Image\": \"https://tenor.com/view/yoinky-sploinky-jerma-jerma985-yoinky-sploinky-gif-22804720\",\n        \"SalePrice\": 45,\n        \"RentPrice\": 5,\n        \"Stock\": 1\n    }\n]"
						}
					]
				}
			]
		},
		{
			"name": "payment",
			"item": [
				{
					"name": "Endpoint 18",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "CardNo",
									"value": "2345469459",
									"description": "varchar (50)",
									"type": "text"
								},
								{
									"key": "CVV",
									"value": "345",
									"description": "integer",
									"type": "text"
								},
								{
									"key": "BillingAddress",
									"value": "10 Ash Grove Lane",
									"description": "varchar (50)",
									"type": "text"
								},
								{
									"key": "NameOnCard",
									"value": "Jeremy",
									"description": "varchar (50)",
									"type": "text"
								},
								{
									"key": "User_Email",
									"value": "a@gmail.com",
									"description": "varchar (50)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/payment/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"payment",
								""
							]
						},
						"description": "#### Description\n\nInput User/Admin Payment Info"
					},
					"response": [
						{
							"name": "Endpoint 18",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CardNo",
											"value": "2345469459",
											"description": "varchar (50)",
											"type": "text"
										},
										{
											"key": "CVV",
											"value": "345",
											"description": "integer",
											"type": "text"
										},
										{
											"key": "BillingAddress",
											"value": "10 Ash Grove Lane",
											"description": "varchar (50)",
											"type": "text"
										},
										{
											"key": "NameOnCard",
											"value": "Jeremy",
											"description": "varchar (50)",
											"type": "text"
										},
										{
											"key": "User_Email",
											"value": "a@gmail.com",
											"description": "varchar (50)",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://127.0.0.1:8000/payment/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"payment",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 07:52:35 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "117"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"CardNo\": 2345469459,\n    \"CVV\": 345,\n    \"BillingAddress\": \"10 Ash Grove Lane\",\n    \"NameOnCard\": \"Jeremy\",\n    \"User_Email\": \"a@gmail.com\"\n}"
						}
					]
				},
				{
					"name": "Endpoint 19",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/payment/?User_Email=a@gmail.com",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"payment",
								""
							],
							"query": [
								{
									"key": "User_Email",
									"value": "a@gmail.com",
									"description": "varchar (50)"
								}
							]
						},
						"description": "#### Description\n\nGet User/Admin Payment options"
					},
					"response": [
						{
							"name": "Endpoint 19",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://127.0.0.1:8000/payment/?User_Email=a@gmail.com",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"payment",
										""
									],
									"query": [
										{
											"key": "User_Email",
											"value": "a@gmail.com",
											"description": "varchar (50)"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 07:54:07 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "117"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"CardNo\": 2345469459,\n    \"CVV\": 345,\n    \"BillingAddress\": \"10 Ash Grove Lane\",\n    \"NameOnCard\": \"Jeremy\",\n    \"User_Email\": \"a@gmail.com\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "order",
			"item": [
				{
					"name": "Endpoint 22",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "OrderDate",
									"value": "2002-01-01",
									"description": "date",
									"type": "text"
								},
								{
									"key": "CardNo",
									"value": "2345469459",
									"description": "varchar (50)",
									"type": "text"
								},
								{
									"key": "User_Email",
									"value": "a@gmail.com",
									"description": "varchar (50)",
									"type": "text"
								},
								{
									"key": "Book_ID",
									"value": "3",
									"description": "integer",
									"type": "text"
								},
								{
									"key": "Quantity",
									"value": "1",
									"description": "integer",
									"type": "text"
								},
								{
									"key": "PolicyNo",
									"value": "3",
									"description": "integer",
									"type": "text"
								},
								{
									"key": "InsuranceProvider_Name",
									"value": "a",
									"description": "varchar (50)",
									"type": "text"
								},
								{
									"key": "StartDate",
									"value": "2022-04-13",
									"description": "date",
									"type": "text"
								},
								{
									"key": "EndDate",
									"value": "2022-05-13",
									"description": "data",
									"type": "text"
								},
								{
									"key": "RentAmt",
									"value": "20",
									"description": "integer",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/rentaldetail/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"rentaldetail",
								""
							]
						},
						"description": "#### Description\n\nAdd new rental info"
					},
					"response": [
						{
							"name": "Endpoint 22",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "OrderDate",
											"value": "2002-01-01",
											"description": "date",
											"type": "text"
										},
										{
											"key": "CardNo",
											"value": "2345469459",
											"description": "varchar (50)",
											"type": "text"
										},
										{
											"key": "User_Email",
											"value": "a@gmail.com",
											"description": "varchar (50)",
											"type": "text"
										},
										{
											"key": "Book_ID",
											"value": "3",
											"description": "integer",
											"type": "text"
										},
										{
											"key": "Quantity",
											"value": "1",
											"description": "integer",
											"type": "text"
										},
										{
											"key": "PolicyNo",
											"value": "3",
											"description": "integer",
											"type": "text"
										},
										{
											"key": "InsuranceProvider_Name",
											"value": "a",
											"description": "varchar (50)",
											"type": "text"
										},
										{
											"key": "StartDate",
											"value": "2022-04-13",
											"description": "date",
											"type": "text"
										},
										{
											"key": "EndDate",
											"value": "2022-05-13",
											"description": "data",
											"type": "text"
										},
										{
											"key": "RentAmt",
											"value": "20",
											"description": "integer",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://127.0.0.1:8000/rentaldetail/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"rentaldetail",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 08:03:24 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "213"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"User_Email\": \"a@gmail.com\",\n    \"OrderID\": 8,\n    \"StartDate\": \"2022-04-13\",\n    \"EndDate\": \"2022-05-13\",\n    \"RentAmt\": 20,\n    \"BookID\": 3,\n    \"Policy_no\": 3,\n    \"InsuranceProvider_Name\": \"a\",\n    \"Quantity\": 1,\n    \"CardNo\": 2345469459,\n    \"OrderDate\": \"2002-01-01\"\n}"
						}
					]
				},
				{
					"name": "Endpoint 23",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "OrderDate",
									"value": "2002-01-01",
									"type": "text"
								},
								{
									"key": "CardNo",
									"value": "2345469459",
									"type": "text"
								},
								{
									"key": "User_Email",
									"value": "a@gmail.com",
									"type": "text"
								},
								{
									"key": "Book_ID",
									"value": "3",
									"type": "text"
								},
								{
									"key": "Quantity",
									"value": "1",
									"type": "text"
								},
								{
									"key": "PolicyNo",
									"value": "3",
									"type": "text"
								},
								{
									"key": "InsuranceProvider_Name",
									"value": "a",
									"type": "text"
								},
								{
									"key": "StartDate",
									"value": "2022-04-13",
									"type": "text"
								},
								{
									"key": "EndDate",
									"value": "2022-05-13",
									"type": "text"
								},
								{
									"key": "PurchaseAmt",
									"value": "20",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/purchasedetail/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"purchasedetail",
								""
							]
						},
						"description": "#### Description\n\nAdd new purchase info"
					},
					"response": [
						{
							"name": "Endpoint 23",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "OrderDate",
											"value": "2002-01-01",
											"type": "text"
										},
										{
											"key": "CardNo",
											"value": "2345469459",
											"type": "text"
										},
										{
											"key": "User_Email",
											"value": "a@gmail.com",
											"type": "text"
										},
										{
											"key": "Book_ID",
											"value": "3",
											"type": "text"
										},
										{
											"key": "Quantity",
											"value": "1",
											"type": "text"
										},
										{
											"key": "PolicyNo",
											"value": "3",
											"type": "text"
										},
										{
											"key": "InsuranceProvider_Name",
											"value": "a",
											"type": "text"
										},
										{
											"key": "StartDate",
											"value": "2022-04-13",
											"type": "text"
										},
										{
											"key": "EndDate",
											"value": "2022-05-13",
											"type": "text"
										},
										{
											"key": "PurchaseAmt",
											"value": "20",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://127.0.0.1:8000/purchasedetail/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"purchasedetail",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 08:05:14 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "170"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"User_Email\": \"a@gmail.com\",\n    \"OrderID\": 15,\n    \"PurchaseAmt\": 20,\n    \"BookID\": 3,\n    \"Policy_no\": 3,\n    \"InsuranceProvider_Name\": \"a\",\n    \"Quantity\": 1,\n    \"OrderDate\": \"2002-01-01\",\n    \"CardNo\": 2345469459\n}"
						}
					]
				},
				{
					"name": "Endpoint 31",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/rentaldetail/?User_Email=e@gmail.com",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"rentaldetail",
								""
							],
							"query": [
								{
									"key": "User_Email",
									"value": "e@gmail.com",
									"description": "varchar (50)"
								}
							]
						},
						"description": "#### Description\n\nGets all purchase information for a user"
					},
					"response": [
						{
							"name": "Endpoint 31",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://127.0.0.1:8000/rentaldetail/?User_Email=e@gmail.com",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"rentaldetail",
										""
									],
									"query": [
										{
											"key": "User_Email",
											"value": "e@gmail.com",
											"description": "varchar (50)"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 08:22:04 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "207"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"User_Email\": \"e@gmail.com\",\n        \"OrderID\": 1,\n        \"StartDate\": \"2022-04-09\",\n        \"EndDate\": \"2022-04-16\",\n        \"RentAmt\": 4,\n        \"BookID\": 4,\n        \"Policy_no\": 0,\n        \"InsuranceProvider_Name\": \"a\",\n        \"Quantity\": 1,\n        \"CardNo\": 224,\n        \"OrderDate\": \"2022-04-09\"\n    }\n]"
						}
					]
				},
				{
					"name": "Endpoint 32",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/purchasedetail/?User_Email=e@gmail.com",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"purchasedetail",
								""
							],
							"query": [
								{
									"key": "User_Email",
									"value": "e@gmail.com",
									"description": "varchar (20)"
								}
							]
						},
						"description": "#### Description\n\nGets all purchase information for a user"
					},
					"response": [
						{
							"name": "Endpoint 32",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://127.0.0.1:8000/purchasedetail/?User_Email=e@gmail.com",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"purchasedetail",
										""
									],
									"query": [
										{
											"key": "User_Email",
											"value": "e@gmail.com",
											"description": "varchar (20)"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 08:23:08 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "164"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"User_Email\": \"e@gmail.com\",\n        \"OrderID\": 4,\n        \"PurchaseAmt\": 19,\n        \"BookID\": 5,\n        \"Policy_no\": 0,\n        \"InsuranceProvider_Name\": \"a\",\n        \"Quantity\": 1,\n        \"OrderDate\": \"2022-04-08\",\n        \"CardNo\": 224\n    }\n]"
						}
					]
				}
			]
		},
		{
			"name": "insurance",
			"item": [
				{
					"name": "Endpoint 24",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "Location_ID",
									"value": "1",
									"description": "integer",
									"type": "text"
								},
								{
									"key": "Name",
									"value": "NewInsuranceProvider",
									"description": "varchar (50)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/insuranceprovider/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"insuranceprovider",
								""
							]
						},
						"description": "#### Description\n\nAdd new insurance provider"
					},
					"response": [
						{
							"name": "Endpoint 24",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Location_ID",
											"value": "1",
											"description": "integer",
											"type": "text"
										},
										{
											"key": "Name",
											"value": "NewInsuranceProvider",
											"description": "varchar (50)",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://127.0.0.1:8000/insuranceprovider/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"insuranceprovider",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 08:07:49 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "47"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"Name\": \"NewInsuranceProvider\",\n    \"Location_ID\": 1\n}"
						}
					]
				},
				{
					"name": "Endpoint 25",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "PolicyNo",
									"value": "2",
									"description": "integer",
									"type": "text"
								},
								{
									"key": "Price",
									"value": "15",
									"description": "integer",
									"type": "text"
								},
								{
									"key": "CoverageDuration",
									"value": "24",
									"description": "integer",
									"type": "text"
								},
								{
									"key": "InsuranceProvider_name",
									"value": "NewInsuranceProvider",
									"description": "varchar (50)",
									"type": "text"
								},
								{
									"key": "Details",
									"value": "Plan Details",
									"description": "varchar (50)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/insuranceplan/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"insuranceplan",
								""
							]
						},
						"description": "#### Description\n\nAdd new insurance plan"
					},
					"response": [
						{
							"name": "Endpoint 25",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PolicyNo",
											"value": "2",
											"description": "integer",
											"type": "text"
										},
										{
											"key": "Price",
											"value": "15",
											"description": "integer",
											"type": "text"
										},
										{
											"key": "CoverageDuration",
											"value": "24",
											"description": "integer",
											"type": "text"
										},
										{
											"key": "InsuranceProvider_name",
											"value": "NewInsuranceProvider",
											"description": "varchar (50)",
											"type": "text"
										},
										{
											"key": "Details",
											"value": "Plan Details",
											"description": "varchar (50)",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://127.0.0.1:8000/insuranceplan/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"insuranceplan",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 08:10:12 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "120"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"PolicyNo\": 2,\n    \"Price\": 15,\n    \"CoverageDuration\": 24,\n    \"Details\": \"Plan Details\",\n    \"InsuranceProvider_Name\": \"NewInsuranceProvider\"\n}"
						}
					]
				},
				{
					"name": "Endpoint 40",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/insuranceplan/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"insuranceplan",
								""
							]
						},
						"description": "#### Description\n\nUsed to get all insurance plans"
					},
					"response": [
						{
							"name": "Endpoint 40",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://127.0.0.1:8000/insuranceplan/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"insuranceplan",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 08:46:47 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "328"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"PolicyNo\": 0,\n        \"Price\": 1000000000000,\n        \"CoverageDuration\": 1,\n        \"Details\": \"blah blah blah\",\n        \"InsuranceProvider_Name\": \"miku\"\n    },\n    {\n        \"PolicyNo\": 2,\n        \"Price\": 15,\n        \"CoverageDuration\": 24,\n        \"Details\": \"Plan Details\",\n        \"InsuranceProvider_Name\": \"NewInsuranceProvider\"\n    },\n    {\n        \"PolicyNo\": 3,\n        \"Price\": 1,\n        \"CoverageDuration\": 1,\n        \"Details\": \"a\",\n        \"InsuranceProvider_Name\": \"a\"\n    }\n]"
						}
					]
				}
			]
		},
		{
			"name": "review",
			"item": [
				{
					"name": "Endpoint 26",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://127.0.0.1:8000/review/book/?BookID=4",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"review",
								"book",
								""
							],
							"query": [
								{
									"key": "BookID",
									"value": "4",
									"description": "integer"
								}
							]
						},
						"description": "#### Description\n\nGet review for book"
					},
					"response": [
						{
							"name": "Endpoint 26",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "http://127.0.0.1:8000/review/book/?BookID=4",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"review",
										"book",
										""
									],
									"query": [
										{
											"key": "BookID",
											"value": "4"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 08:12:02 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, PATCH, DELETE, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "79"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"BookID\": 4,\n        \"User_Email\": \"s@s.com\",\n        \"Rating\": 3,\n        \"Comment\": \"wdad\",\n        \"Review_ID\": 5\n    }\n]"
						}
					]
				},
				{
					"name": "Endpoint 27",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "BookID",
									"value": "4",
									"description": "integer",
									"type": "text"
								},
								{
									"key": "User_Email",
									"value": "e@gmail.com",
									"description": "varchar (50)",
									"type": "text"
								},
								{
									"key": "Rating",
									"value": "3",
									"description": "integer",
									"type": "text"
								},
								{
									"key": "Comment",
									"value": "Adding Review",
									"description": "varchar (100)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/review/book/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"review",
								"book",
								""
							]
						},
						"description": "#### Description\n\nPost a review for a book"
					},
					"response": [
						{
							"name": "Endpoint 27",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "BookID",
											"value": "4",
											"description": "integer",
											"type": "text"
										},
										{
											"key": "User_Email",
											"value": "e@gmail.com",
											"description": "varchar (50)",
											"type": "text"
										},
										{
											"key": "Rating",
											"value": "3",
											"description": "integer",
											"type": "text"
										},
										{
											"key": "Comment",
											"value": "Adding Review",
											"description": "varchar (100)",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://127.0.0.1:8000/review/book/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"review",
										"book",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 08:13:56 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, PATCH, DELETE, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "91"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"BookID\": 4,\n    \"User_Email\": \"e@gmail.com\",\n    \"Rating\": 3,\n    \"Comment\": \"Adding Review\",\n    \"Review_ID\": 17\n}"
						}
					]
				},
				{
					"name": "delete review",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/review/book/?BookID=9&User_Email=e@gmail.com",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"review",
								"book",
								""
							],
							"query": [
								{
									"key": "BookID",
									"value": "9"
								},
								{
									"key": "User_Email",
									"value": "e@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "location",
			"item": [
				{
					"name": "Endpoint 35",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "Country",
									"value": "Canada",
									"description": "varchar (20)",
									"type": "text"
								},
								{
									"key": "City",
									"value": "Regina",
									"description": "varchar (20)",
									"type": "text"
								},
								{
									"key": "StreetNum",
									"value": "4",
									"description": "integer",
									"type": "text"
								},
								{
									"key": "PostalCode",
									"value": "R5G1K9",
									"description": "varchar (6)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/location/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"location",
								""
							]
						},
						"description": "#### Description\n\nUsed to add a location"
					},
					"response": [
						{
							"name": "Endpoint 35",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Country",
											"value": "Canada",
											"description": "varchar (20)",
											"type": "text"
										},
										{
											"key": "City",
											"value": "Regina",
											"description": "varchar (20)",
											"type": "text"
										},
										{
											"key": "StreetNum",
											"value": "4",
											"description": "integer",
											"type": "text"
										},
										{
											"key": "PostalCode",
											"value": "R5G1K9",
											"description": "varchar (6)",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://127.0.0.1:8000/location/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"location",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 08:35:01 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "87"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"LocationID\": 3,\n    \"Country\": \"Canada\",\n    \"City\": \"Regina\",\n    \"StreetNum\": 4,\n    \"PostalCode\": \"R5G1K9\"\n}"
						}
					]
				},
				{
					"name": "Endpoint 36",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/location/?LocationID=1",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"location",
								""
							],
							"query": [
								{
									"key": "LocationID",
									"value": "1",
									"description": "integer"
								}
							]
						},
						"description": "Used to get a location"
					},
					"response": [
						{
							"name": "Endpoint 36",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://127.0.0.1:8000/location/?LocationID=1",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"location",
										""
									],
									"query": [
										{
											"key": "LocationID",
											"value": "1",
											"description": "integer"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 08:38:48 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.12"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "72"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"LocationID\": 1,\n    \"Country\": \"a\",\n    \"City\": \"a\",\n    \"StreetNum\": 0,\n    \"PostalCode\": \"a\"\n}"
						}
					]
				}
			]
		}
	]
}